# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import airframes_client_frame_pb2 as airframes__client__frame__pb2


class AirframesStub(object):
    """Airframes.io Specific

    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendExampleFrame = channel.unary_unary(
                '/airframes.Airframes/SendExampleFrame',
                request_serializer=airframes__client__frame__pb2.TestRequest.SerializeToString,
                response_deserializer=airframes__client__frame__pb2.AirframesClientFrame.FromString,
                )
        self.SendFrame = channel.unary_unary(
                '/airframes.Airframes/SendFrame',
                request_serializer=airframes__client__frame__pb2.AirframesClientFrame.SerializeToString,
                response_deserializer=airframes__client__frame__pb2.AirframesClientFrame.FromString,
                )
        self.GetFrame = channel.unary_unary(
                '/airframes.Airframes/GetFrame',
                request_serializer=airframes__client__frame__pb2.FrameRequest.SerializeToString,
                response_deserializer=airframes__client__frame__pb2.AirframesClientFrame.FromString,
                )
        self.GetFrames = channel.unary_stream(
                '/airframes.Airframes/GetFrames',
                request_serializer=airframes__client__frame__pb2.FrameRequest.SerializeToString,
                response_deserializer=airframes__client__frame__pb2.AirframesClientFrame.FromString,
                )


class AirframesServicer(object):
    """Airframes.io Specific

    """

    def SendExampleFrame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendFrame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFrame(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFrames(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_AirframesServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendExampleFrame': grpc.unary_unary_rpc_method_handler(
                    servicer.SendExampleFrame,
                    request_deserializer=airframes__client__frame__pb2.TestRequest.FromString,
                    response_serializer=airframes__client__frame__pb2.AirframesClientFrame.SerializeToString,
            ),
            'SendFrame': grpc.unary_unary_rpc_method_handler(
                    servicer.SendFrame,
                    request_deserializer=airframes__client__frame__pb2.AirframesClientFrame.FromString,
                    response_serializer=airframes__client__frame__pb2.AirframesClientFrame.SerializeToString,
            ),
            'GetFrame': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFrame,
                    request_deserializer=airframes__client__frame__pb2.FrameRequest.FromString,
                    response_serializer=airframes__client__frame__pb2.AirframesClientFrame.SerializeToString,
            ),
            'GetFrames': grpc.unary_stream_rpc_method_handler(
                    servicer.GetFrames,
                    request_deserializer=airframes__client__frame__pb2.FrameRequest.FromString,
                    response_serializer=airframes__client__frame__pb2.AirframesClientFrame.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'airframes.Airframes', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class Airframes(object):
    """Airframes.io Specific

    """

    @staticmethod
    def SendExampleFrame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/airframes.Airframes/SendExampleFrame',
            airframes__client__frame__pb2.TestRequest.SerializeToString,
            airframes__client__frame__pb2.AirframesClientFrame.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendFrame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/airframes.Airframes/SendFrame',
            airframes__client__frame__pb2.AirframesClientFrame.SerializeToString,
            airframes__client__frame__pb2.AirframesClientFrame.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFrame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/airframes.Airframes/GetFrame',
            airframes__client__frame__pb2.FrameRequest.SerializeToString,
            airframes__client__frame__pb2.AirframesClientFrame.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetFrames(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(request, target, '/airframes.Airframes/GetFrames',
            airframes__client__frame__pb2.FrameRequest.SerializeToString,
            airframes__client__frame__pb2.AirframesClientFrame.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
