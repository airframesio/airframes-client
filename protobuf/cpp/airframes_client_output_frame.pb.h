// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: airframes_client_output_frame.proto

#ifndef PROTOBUF_INCLUDED_airframes_5fclient_5foutput_5fframe_2eproto
#define PROTOBUF_INCLUDED_airframes_5fclient_5foutput_5fframe_2eproto

#include <limits>
#include <string>

#include <google/protobuf/port_def.inc>
#if PROTOBUF_VERSION < 3007000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers. Please update
#error your headers.
#endif
#if 3007001 < PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers. Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/port_undef.inc>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/inlined_string_field.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
#define PROTOBUF_INTERNAL_EXPORT_airframes_5fclient_5foutput_5fframe_2eproto

// Internal implementation detail -- do not use these members.
struct TableStruct_airframes_5fclient_5foutput_5fframe_2eproto {
  static const ::google::protobuf::internal::ParseTableField entries[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::ParseTable schema[6]
    PROTOBUF_SECTION_VARIABLE(protodesc_cold);
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static const ::google::protobuf::uint32 offsets[];
};
void AddDescriptors_airframes_5fclient_5foutput_5fframe_2eproto();
class AirframesClientOutputFrame;
class AirframesClientOutputFrameDefaultTypeInternal;
extern AirframesClientOutputFrameDefaultTypeInternal _AirframesClientOutputFrame_default_instance_;
class AirframesClientOutputFrame_AirframesConfig;
class AirframesClientOutputFrame_AirframesConfigDefaultTypeInternal;
extern AirframesClientOutputFrame_AirframesConfigDefaultTypeInternal _AirframesClientOutputFrame_AirframesConfig_default_instance_;
class AirframesClientOutputFrame_AirframesConfig_Feed;
class AirframesClientOutputFrame_AirframesConfig_FeedDefaultTypeInternal;
extern AirframesClientOutputFrame_AirframesConfig_FeedDefaultTypeInternal _AirframesClientOutputFrame_AirframesConfig_Feed_default_instance_;
class AirframesClientOutputFrame_Source;
class AirframesClientOutputFrame_SourceDefaultTypeInternal;
extern AirframesClientOutputFrame_SourceDefaultTypeInternal _AirframesClientOutputFrame_Source_default_instance_;
class AirframesClientOutputFrame_Source_App;
class AirframesClientOutputFrame_Source_AppDefaultTypeInternal;
extern AirframesClientOutputFrame_Source_AppDefaultTypeInternal _AirframesClientOutputFrame_Source_App_default_instance_;
class AirframesClientOutputFrame_Source_Host;
class AirframesClientOutputFrame_Source_HostDefaultTypeInternal;
extern AirframesClientOutputFrame_Source_HostDefaultTypeInternal _AirframesClientOutputFrame_Source_Host_default_instance_;
namespace google {
namespace protobuf {
template<> ::AirframesClientOutputFrame* Arena::CreateMaybeMessage<::AirframesClientOutputFrame>(Arena*);
template<> ::AirframesClientOutputFrame_AirframesConfig* Arena::CreateMaybeMessage<::AirframesClientOutputFrame_AirframesConfig>(Arena*);
template<> ::AirframesClientOutputFrame_AirframesConfig_Feed* Arena::CreateMaybeMessage<::AirframesClientOutputFrame_AirframesConfig_Feed>(Arena*);
template<> ::AirframesClientOutputFrame_Source* Arena::CreateMaybeMessage<::AirframesClientOutputFrame_Source>(Arena*);
template<> ::AirframesClientOutputFrame_Source_App* Arena::CreateMaybeMessage<::AirframesClientOutputFrame_Source_App>(Arena*);
template<> ::AirframesClientOutputFrame_Source_Host* Arena::CreateMaybeMessage<::AirframesClientOutputFrame_Source_Host>(Arena*);
}  // namespace protobuf
}  // namespace google

enum AirframesClientOutputFrame_Source_App_AppType {
  AirframesClientOutputFrame_Source_App_AppType_UNKNOWN_APP_TYPE = 0,
  AirframesClientOutputFrame_Source_App_AppType_ACARSDEC = 1,
  AirframesClientOutputFrame_Source_App_AppType_ACARSDECO2 = 2,
  AirframesClientOutputFrame_Source_App_AppType_VDLM2DEC = 3,
  AirframesClientOutputFrame_Source_App_AppType_DUMPVDL2 = 4,
  AirframesClientOutputFrame_Source_App_AppType_JAERO = 5,
  AirframesClientOutputFrame_Source_App_AppType_PC_HFDL = 6,
  AirframesClientOutputFrame_Source_App_AppType_SORCERER = 7,
  AirframesClientOutputFrame_Source_App_AppType_AirframesClientOutputFrame_Source_App_AppType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  AirframesClientOutputFrame_Source_App_AppType_AirframesClientOutputFrame_Source_App_AppType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool AirframesClientOutputFrame_Source_App_AppType_IsValid(int value);
const AirframesClientOutputFrame_Source_App_AppType AirframesClientOutputFrame_Source_App_AppType_AppType_MIN = AirframesClientOutputFrame_Source_App_AppType_UNKNOWN_APP_TYPE;
const AirframesClientOutputFrame_Source_App_AppType AirframesClientOutputFrame_Source_App_AppType_AppType_MAX = AirframesClientOutputFrame_Source_App_AppType_SORCERER;
const int AirframesClientOutputFrame_Source_App_AppType_AppType_ARRAYSIZE = AirframesClientOutputFrame_Source_App_AppType_AppType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AirframesClientOutputFrame_Source_App_AppType_descriptor();
inline const ::std::string& AirframesClientOutputFrame_Source_App_AppType_Name(AirframesClientOutputFrame_Source_App_AppType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AirframesClientOutputFrame_Source_App_AppType_descriptor(), value);
}
inline bool AirframesClientOutputFrame_Source_App_AppType_Parse(
    const ::std::string& name, AirframesClientOutputFrame_Source_App_AppType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AirframesClientOutputFrame_Source_App_AppType>(
    AirframesClientOutputFrame_Source_App_AppType_descriptor(), name, value);
}
enum AirframesClientOutputFrame_Source_Host_Platform {
  AirframesClientOutputFrame_Source_Host_Platform_UNKNOWN_PLATFORM = 0,
  AirframesClientOutputFrame_Source_Host_Platform_X86_32 = 1,
  AirframesClientOutputFrame_Source_Host_Platform_X86_64 = 2,
  AirframesClientOutputFrame_Source_Host_Platform_ARM_V6 = 3,
  AirframesClientOutputFrame_Source_Host_Platform_ARM_V7 = 4,
  AirframesClientOutputFrame_Source_Host_Platform_ARM_64 = 5,
  AirframesClientOutputFrame_Source_Host_Platform_AirframesClientOutputFrame_Source_Host_Platform_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  AirframesClientOutputFrame_Source_Host_Platform_AirframesClientOutputFrame_Source_Host_Platform_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool AirframesClientOutputFrame_Source_Host_Platform_IsValid(int value);
const AirframesClientOutputFrame_Source_Host_Platform AirframesClientOutputFrame_Source_Host_Platform_Platform_MIN = AirframesClientOutputFrame_Source_Host_Platform_UNKNOWN_PLATFORM;
const AirframesClientOutputFrame_Source_Host_Platform AirframesClientOutputFrame_Source_Host_Platform_Platform_MAX = AirframesClientOutputFrame_Source_Host_Platform_ARM_64;
const int AirframesClientOutputFrame_Source_Host_Platform_Platform_ARRAYSIZE = AirframesClientOutputFrame_Source_Host_Platform_Platform_MAX + 1;

const ::google::protobuf::EnumDescriptor* AirframesClientOutputFrame_Source_Host_Platform_descriptor();
inline const ::std::string& AirframesClientOutputFrame_Source_Host_Platform_Name(AirframesClientOutputFrame_Source_Host_Platform value) {
  return ::google::protobuf::internal::NameOfEnum(
    AirframesClientOutputFrame_Source_Host_Platform_descriptor(), value);
}
inline bool AirframesClientOutputFrame_Source_Host_Platform_Parse(
    const ::std::string& name, AirframesClientOutputFrame_Source_Host_Platform* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AirframesClientOutputFrame_Source_Host_Platform>(
    AirframesClientOutputFrame_Source_Host_Platform_descriptor(), name, value);
}
enum AirframesClientOutputFrame_Source_Host_OperatingSystem {
  AirframesClientOutputFrame_Source_Host_OperatingSystem_UNKNOWN_OPERATING_SYSTEM = 0,
  AirframesClientOutputFrame_Source_Host_OperatingSystem_LINUX = 1,
  AirframesClientOutputFrame_Source_Host_OperatingSystem_MACOS = 2,
  AirframesClientOutputFrame_Source_Host_OperatingSystem_WINDOWS = 3,
  AirframesClientOutputFrame_Source_Host_OperatingSystem_AirframesClientOutputFrame_Source_Host_OperatingSystem_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  AirframesClientOutputFrame_Source_Host_OperatingSystem_AirframesClientOutputFrame_Source_Host_OperatingSystem_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool AirframesClientOutputFrame_Source_Host_OperatingSystem_IsValid(int value);
const AirframesClientOutputFrame_Source_Host_OperatingSystem AirframesClientOutputFrame_Source_Host_OperatingSystem_OperatingSystem_MIN = AirframesClientOutputFrame_Source_Host_OperatingSystem_UNKNOWN_OPERATING_SYSTEM;
const AirframesClientOutputFrame_Source_Host_OperatingSystem AirframesClientOutputFrame_Source_Host_OperatingSystem_OperatingSystem_MAX = AirframesClientOutputFrame_Source_Host_OperatingSystem_WINDOWS;
const int AirframesClientOutputFrame_Source_Host_OperatingSystem_OperatingSystem_ARRAYSIZE = AirframesClientOutputFrame_Source_Host_OperatingSystem_OperatingSystem_MAX + 1;

const ::google::protobuf::EnumDescriptor* AirframesClientOutputFrame_Source_Host_OperatingSystem_descriptor();
inline const ::std::string& AirframesClientOutputFrame_Source_Host_OperatingSystem_Name(AirframesClientOutputFrame_Source_Host_OperatingSystem value) {
  return ::google::protobuf::internal::NameOfEnum(
    AirframesClientOutputFrame_Source_Host_OperatingSystem_descriptor(), value);
}
inline bool AirframesClientOutputFrame_Source_Host_OperatingSystem_Parse(
    const ::std::string& name, AirframesClientOutputFrame_Source_Host_OperatingSystem* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AirframesClientOutputFrame_Source_Host_OperatingSystem>(
    AirframesClientOutputFrame_Source_Host_OperatingSystem_descriptor(), name, value);
}
enum AirframesClientOutputFrame_Source_SourceType {
  AirframesClientOutputFrame_Source_SourceType_ACARS = 0,
  AirframesClientOutputFrame_Source_SourceType_VDL = 1,
  AirframesClientOutputFrame_Source_SourceType_HFDL = 2,
  AirframesClientOutputFrame_Source_SourceType_AERO = 3,
  AirframesClientOutputFrame_Source_SourceType_AirframesClientOutputFrame_Source_SourceType_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  AirframesClientOutputFrame_Source_SourceType_AirframesClientOutputFrame_Source_SourceType_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool AirframesClientOutputFrame_Source_SourceType_IsValid(int value);
const AirframesClientOutputFrame_Source_SourceType AirframesClientOutputFrame_Source_SourceType_SourceType_MIN = AirframesClientOutputFrame_Source_SourceType_ACARS;
const AirframesClientOutputFrame_Source_SourceType AirframesClientOutputFrame_Source_SourceType_SourceType_MAX = AirframesClientOutputFrame_Source_SourceType_AERO;
const int AirframesClientOutputFrame_Source_SourceType_SourceType_ARRAYSIZE = AirframesClientOutputFrame_Source_SourceType_SourceType_MAX + 1;

const ::google::protobuf::EnumDescriptor* AirframesClientOutputFrame_Source_SourceType_descriptor();
inline const ::std::string& AirframesClientOutputFrame_Source_SourceType_Name(AirframesClientOutputFrame_Source_SourceType value) {
  return ::google::protobuf::internal::NameOfEnum(
    AirframesClientOutputFrame_Source_SourceType_descriptor(), value);
}
inline bool AirframesClientOutputFrame_Source_SourceType_Parse(
    const ::std::string& name, AirframesClientOutputFrame_Source_SourceType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AirframesClientOutputFrame_Source_SourceType>(
    AirframesClientOutputFrame_Source_SourceType_descriptor(), name, value);
}
enum AirframesClientOutputFrame_Source_SourceFormat {
  AirframesClientOutputFrame_Source_SourceFormat_HUMAN_READABLE_TEXT = 0,
  AirframesClientOutputFrame_Source_SourceFormat_BEAST = 1,
  AirframesClientOutputFrame_Source_SourceFormat_SBS3 = 2,
  AirframesClientOutputFrame_Source_SourceFormat_PLANE_PLOTTER = 3,
  AirframesClientOutputFrame_Source_SourceFormat_JSON_GENERIC = 4,
  AirframesClientOutputFrame_Source_SourceFormat_JSON_ACARSDEC = 5,
  AirframesClientOutputFrame_Source_SourceFormat_JSON_VDLM2DEC = 6,
  AirframesClientOutputFrame_Source_SourceFormat_AirframesClientOutputFrame_Source_SourceFormat_INT_MIN_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::min(),
  AirframesClientOutputFrame_Source_SourceFormat_AirframesClientOutputFrame_Source_SourceFormat_INT_MAX_SENTINEL_DO_NOT_USE_ = std::numeric_limits<::google::protobuf::int32>::max()
};
bool AirframesClientOutputFrame_Source_SourceFormat_IsValid(int value);
const AirframesClientOutputFrame_Source_SourceFormat AirframesClientOutputFrame_Source_SourceFormat_SourceFormat_MIN = AirframesClientOutputFrame_Source_SourceFormat_HUMAN_READABLE_TEXT;
const AirframesClientOutputFrame_Source_SourceFormat AirframesClientOutputFrame_Source_SourceFormat_SourceFormat_MAX = AirframesClientOutputFrame_Source_SourceFormat_JSON_VDLM2DEC;
const int AirframesClientOutputFrame_Source_SourceFormat_SourceFormat_ARRAYSIZE = AirframesClientOutputFrame_Source_SourceFormat_SourceFormat_MAX + 1;

const ::google::protobuf::EnumDescriptor* AirframesClientOutputFrame_Source_SourceFormat_descriptor();
inline const ::std::string& AirframesClientOutputFrame_Source_SourceFormat_Name(AirframesClientOutputFrame_Source_SourceFormat value) {
  return ::google::protobuf::internal::NameOfEnum(
    AirframesClientOutputFrame_Source_SourceFormat_descriptor(), value);
}
inline bool AirframesClientOutputFrame_Source_SourceFormat_Parse(
    const ::std::string& name, AirframesClientOutputFrame_Source_SourceFormat* value) {
  return ::google::protobuf::internal::ParseNamedEnum<AirframesClientOutputFrame_Source_SourceFormat>(
    AirframesClientOutputFrame_Source_SourceFormat_descriptor(), name, value);
}
// ===================================================================

class AirframesClientOutputFrame_Source_App :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AirframesClientOutputFrame.Source.App) */ {
 public:
  AirframesClientOutputFrame_Source_App();
  virtual ~AirframesClientOutputFrame_Source_App();

  AirframesClientOutputFrame_Source_App(const AirframesClientOutputFrame_Source_App& from);

  inline AirframesClientOutputFrame_Source_App& operator=(const AirframesClientOutputFrame_Source_App& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AirframesClientOutputFrame_Source_App(AirframesClientOutputFrame_Source_App&& from) noexcept
    : AirframesClientOutputFrame_Source_App() {
    *this = ::std::move(from);
  }

  inline AirframesClientOutputFrame_Source_App& operator=(AirframesClientOutputFrame_Source_App&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AirframesClientOutputFrame_Source_App& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AirframesClientOutputFrame_Source_App* internal_default_instance() {
    return reinterpret_cast<const AirframesClientOutputFrame_Source_App*>(
               &_AirframesClientOutputFrame_Source_App_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  void Swap(AirframesClientOutputFrame_Source_App* other);
  friend void swap(AirframesClientOutputFrame_Source_App& a, AirframesClientOutputFrame_Source_App& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AirframesClientOutputFrame_Source_App* New() const final {
    return CreateMaybeMessage<AirframesClientOutputFrame_Source_App>(nullptr);
  }

  AirframesClientOutputFrame_Source_App* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AirframesClientOutputFrame_Source_App>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AirframesClientOutputFrame_Source_App& from);
  void MergeFrom(const AirframesClientOutputFrame_Source_App& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AirframesClientOutputFrame_Source_App* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AirframesClientOutputFrame_Source_App_AppType AppType;
  static const AppType UNKNOWN_APP_TYPE =
    AirframesClientOutputFrame_Source_App_AppType_UNKNOWN_APP_TYPE;
  static const AppType ACARSDEC =
    AirframesClientOutputFrame_Source_App_AppType_ACARSDEC;
  static const AppType ACARSDECO2 =
    AirframesClientOutputFrame_Source_App_AppType_ACARSDECO2;
  static const AppType VDLM2DEC =
    AirframesClientOutputFrame_Source_App_AppType_VDLM2DEC;
  static const AppType DUMPVDL2 =
    AirframesClientOutputFrame_Source_App_AppType_DUMPVDL2;
  static const AppType JAERO =
    AirframesClientOutputFrame_Source_App_AppType_JAERO;
  static const AppType PC_HFDL =
    AirframesClientOutputFrame_Source_App_AppType_PC_HFDL;
  static const AppType SORCERER =
    AirframesClientOutputFrame_Source_App_AppType_SORCERER;
  static inline bool AppType_IsValid(int value) {
    return AirframesClientOutputFrame_Source_App_AppType_IsValid(value);
  }
  static const AppType AppType_MIN =
    AirframesClientOutputFrame_Source_App_AppType_AppType_MIN;
  static const AppType AppType_MAX =
    AirframesClientOutputFrame_Source_App_AppType_AppType_MAX;
  static const int AppType_ARRAYSIZE =
    AirframesClientOutputFrame_Source_App_AppType_AppType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  AppType_descriptor() {
    return AirframesClientOutputFrame_Source_App_AppType_descriptor();
  }
  static inline const ::std::string& AppType_Name(AppType value) {
    return AirframesClientOutputFrame_Source_App_AppType_Name(value);
  }
  static inline bool AppType_Parse(const ::std::string& name,
      AppType* value) {
    return AirframesClientOutputFrame_Source_App_AppType_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string version = 2;
  void clear_version();
  static const int kVersionFieldNumber = 2;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // .AirframesClientOutputFrame.Source.App.AppType type = 1;
  void clear_type();
  static const int kTypeFieldNumber = 1;
  ::AirframesClientOutputFrame_Source_App_AppType type() const;
  void set_type(::AirframesClientOutputFrame_Source_App_AppType value);

  // @@protoc_insertion_point(class_scope:AirframesClientOutputFrame.Source.App)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  int type_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_airframes_5fclient_5foutput_5fframe_2eproto;
};
// -------------------------------------------------------------------

class AirframesClientOutputFrame_Source_Host :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AirframesClientOutputFrame.Source.Host) */ {
 public:
  AirframesClientOutputFrame_Source_Host();
  virtual ~AirframesClientOutputFrame_Source_Host();

  AirframesClientOutputFrame_Source_Host(const AirframesClientOutputFrame_Source_Host& from);

  inline AirframesClientOutputFrame_Source_Host& operator=(const AirframesClientOutputFrame_Source_Host& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AirframesClientOutputFrame_Source_Host(AirframesClientOutputFrame_Source_Host&& from) noexcept
    : AirframesClientOutputFrame_Source_Host() {
    *this = ::std::move(from);
  }

  inline AirframesClientOutputFrame_Source_Host& operator=(AirframesClientOutputFrame_Source_Host&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AirframesClientOutputFrame_Source_Host& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AirframesClientOutputFrame_Source_Host* internal_default_instance() {
    return reinterpret_cast<const AirframesClientOutputFrame_Source_Host*>(
               &_AirframesClientOutputFrame_Source_Host_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    1;

  void Swap(AirframesClientOutputFrame_Source_Host* other);
  friend void swap(AirframesClientOutputFrame_Source_Host& a, AirframesClientOutputFrame_Source_Host& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AirframesClientOutputFrame_Source_Host* New() const final {
    return CreateMaybeMessage<AirframesClientOutputFrame_Source_Host>(nullptr);
  }

  AirframesClientOutputFrame_Source_Host* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AirframesClientOutputFrame_Source_Host>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AirframesClientOutputFrame_Source_Host& from);
  void MergeFrom(const AirframesClientOutputFrame_Source_Host& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AirframesClientOutputFrame_Source_Host* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AirframesClientOutputFrame_Source_Host_Platform Platform;
  static const Platform UNKNOWN_PLATFORM =
    AirframesClientOutputFrame_Source_Host_Platform_UNKNOWN_PLATFORM;
  static const Platform X86_32 =
    AirframesClientOutputFrame_Source_Host_Platform_X86_32;
  static const Platform X86_64 =
    AirframesClientOutputFrame_Source_Host_Platform_X86_64;
  static const Platform ARM_V6 =
    AirframesClientOutputFrame_Source_Host_Platform_ARM_V6;
  static const Platform ARM_V7 =
    AirframesClientOutputFrame_Source_Host_Platform_ARM_V7;
  static const Platform ARM_64 =
    AirframesClientOutputFrame_Source_Host_Platform_ARM_64;
  static inline bool Platform_IsValid(int value) {
    return AirframesClientOutputFrame_Source_Host_Platform_IsValid(value);
  }
  static const Platform Platform_MIN =
    AirframesClientOutputFrame_Source_Host_Platform_Platform_MIN;
  static const Platform Platform_MAX =
    AirframesClientOutputFrame_Source_Host_Platform_Platform_MAX;
  static const int Platform_ARRAYSIZE =
    AirframesClientOutputFrame_Source_Host_Platform_Platform_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Platform_descriptor() {
    return AirframesClientOutputFrame_Source_Host_Platform_descriptor();
  }
  static inline const ::std::string& Platform_Name(Platform value) {
    return AirframesClientOutputFrame_Source_Host_Platform_Name(value);
  }
  static inline bool Platform_Parse(const ::std::string& name,
      Platform* value) {
    return AirframesClientOutputFrame_Source_Host_Platform_Parse(name, value);
  }

  typedef AirframesClientOutputFrame_Source_Host_OperatingSystem OperatingSystem;
  static const OperatingSystem UNKNOWN_OPERATING_SYSTEM =
    AirframesClientOutputFrame_Source_Host_OperatingSystem_UNKNOWN_OPERATING_SYSTEM;
  static const OperatingSystem LINUX =
    AirframesClientOutputFrame_Source_Host_OperatingSystem_LINUX;
  static const OperatingSystem MACOS =
    AirframesClientOutputFrame_Source_Host_OperatingSystem_MACOS;
  static const OperatingSystem WINDOWS =
    AirframesClientOutputFrame_Source_Host_OperatingSystem_WINDOWS;
  static inline bool OperatingSystem_IsValid(int value) {
    return AirframesClientOutputFrame_Source_Host_OperatingSystem_IsValid(value);
  }
  static const OperatingSystem OperatingSystem_MIN =
    AirframesClientOutputFrame_Source_Host_OperatingSystem_OperatingSystem_MIN;
  static const OperatingSystem OperatingSystem_MAX =
    AirframesClientOutputFrame_Source_Host_OperatingSystem_OperatingSystem_MAX;
  static const int OperatingSystem_ARRAYSIZE =
    AirframesClientOutputFrame_Source_Host_OperatingSystem_OperatingSystem_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  OperatingSystem_descriptor() {
    return AirframesClientOutputFrame_Source_Host_OperatingSystem_descriptor();
  }
  static inline const ::std::string& OperatingSystem_Name(OperatingSystem value) {
    return AirframesClientOutputFrame_Source_Host_OperatingSystem_Name(value);
  }
  static inline bool OperatingSystem_Parse(const ::std::string& name,
      OperatingSystem* value) {
    return AirframesClientOutputFrame_Source_Host_OperatingSystem_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // string version = 3;
  void clear_version();
  static const int kVersionFieldNumber = 3;
  const ::std::string& version() const;
  void set_version(const ::std::string& value);
  #if LANG_CXX11
  void set_version(::std::string&& value);
  #endif
  void set_version(const char* value);
  void set_version(const char* value, size_t size);
  ::std::string* mutable_version();
  ::std::string* release_version();
  void set_allocated_version(::std::string* version);

  // .AirframesClientOutputFrame.Source.Host.Platform platform = 1;
  void clear_platform();
  static const int kPlatformFieldNumber = 1;
  ::AirframesClientOutputFrame_Source_Host_Platform platform() const;
  void set_platform(::AirframesClientOutputFrame_Source_Host_Platform value);

  // .AirframesClientOutputFrame.Source.Host.OperatingSystem os = 2;
  void clear_os();
  static const int kOsFieldNumber = 2;
  ::AirframesClientOutputFrame_Source_Host_OperatingSystem os() const;
  void set_os(::AirframesClientOutputFrame_Source_Host_OperatingSystem value);

  // @@protoc_insertion_point(class_scope:AirframesClientOutputFrame.Source.Host)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr version_;
  int platform_;
  int os_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_airframes_5fclient_5foutput_5fframe_2eproto;
};
// -------------------------------------------------------------------

class AirframesClientOutputFrame_Source :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AirframesClientOutputFrame.Source) */ {
 public:
  AirframesClientOutputFrame_Source();
  virtual ~AirframesClientOutputFrame_Source();

  AirframesClientOutputFrame_Source(const AirframesClientOutputFrame_Source& from);

  inline AirframesClientOutputFrame_Source& operator=(const AirframesClientOutputFrame_Source& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AirframesClientOutputFrame_Source(AirframesClientOutputFrame_Source&& from) noexcept
    : AirframesClientOutputFrame_Source() {
    *this = ::std::move(from);
  }

  inline AirframesClientOutputFrame_Source& operator=(AirframesClientOutputFrame_Source&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AirframesClientOutputFrame_Source& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AirframesClientOutputFrame_Source* internal_default_instance() {
    return reinterpret_cast<const AirframesClientOutputFrame_Source*>(
               &_AirframesClientOutputFrame_Source_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    2;

  void Swap(AirframesClientOutputFrame_Source* other);
  friend void swap(AirframesClientOutputFrame_Source& a, AirframesClientOutputFrame_Source& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AirframesClientOutputFrame_Source* New() const final {
    return CreateMaybeMessage<AirframesClientOutputFrame_Source>(nullptr);
  }

  AirframesClientOutputFrame_Source* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AirframesClientOutputFrame_Source>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AirframesClientOutputFrame_Source& from);
  void MergeFrom(const AirframesClientOutputFrame_Source& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AirframesClientOutputFrame_Source* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AirframesClientOutputFrame_Source_App App;
  typedef AirframesClientOutputFrame_Source_Host Host;

  typedef AirframesClientOutputFrame_Source_SourceType SourceType;
  static const SourceType ACARS =
    AirframesClientOutputFrame_Source_SourceType_ACARS;
  static const SourceType VDL =
    AirframesClientOutputFrame_Source_SourceType_VDL;
  static const SourceType HFDL =
    AirframesClientOutputFrame_Source_SourceType_HFDL;
  static const SourceType AERO =
    AirframesClientOutputFrame_Source_SourceType_AERO;
  static inline bool SourceType_IsValid(int value) {
    return AirframesClientOutputFrame_Source_SourceType_IsValid(value);
  }
  static const SourceType SourceType_MIN =
    AirframesClientOutputFrame_Source_SourceType_SourceType_MIN;
  static const SourceType SourceType_MAX =
    AirframesClientOutputFrame_Source_SourceType_SourceType_MAX;
  static const int SourceType_ARRAYSIZE =
    AirframesClientOutputFrame_Source_SourceType_SourceType_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SourceType_descriptor() {
    return AirframesClientOutputFrame_Source_SourceType_descriptor();
  }
  static inline const ::std::string& SourceType_Name(SourceType value) {
    return AirframesClientOutputFrame_Source_SourceType_Name(value);
  }
  static inline bool SourceType_Parse(const ::std::string& name,
      SourceType* value) {
    return AirframesClientOutputFrame_Source_SourceType_Parse(name, value);
  }

  typedef AirframesClientOutputFrame_Source_SourceFormat SourceFormat;
  static const SourceFormat HUMAN_READABLE_TEXT =
    AirframesClientOutputFrame_Source_SourceFormat_HUMAN_READABLE_TEXT;
  static const SourceFormat BEAST =
    AirframesClientOutputFrame_Source_SourceFormat_BEAST;
  static const SourceFormat SBS3 =
    AirframesClientOutputFrame_Source_SourceFormat_SBS3;
  static const SourceFormat PLANE_PLOTTER =
    AirframesClientOutputFrame_Source_SourceFormat_PLANE_PLOTTER;
  static const SourceFormat JSON_GENERIC =
    AirframesClientOutputFrame_Source_SourceFormat_JSON_GENERIC;
  static const SourceFormat JSON_ACARSDEC =
    AirframesClientOutputFrame_Source_SourceFormat_JSON_ACARSDEC;
  static const SourceFormat JSON_VDLM2DEC =
    AirframesClientOutputFrame_Source_SourceFormat_JSON_VDLM2DEC;
  static inline bool SourceFormat_IsValid(int value) {
    return AirframesClientOutputFrame_Source_SourceFormat_IsValid(value);
  }
  static const SourceFormat SourceFormat_MIN =
    AirframesClientOutputFrame_Source_SourceFormat_SourceFormat_MIN;
  static const SourceFormat SourceFormat_MAX =
    AirframesClientOutputFrame_Source_SourceFormat_SourceFormat_MAX;
  static const int SourceFormat_ARRAYSIZE =
    AirframesClientOutputFrame_Source_SourceFormat_SourceFormat_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  SourceFormat_descriptor() {
    return AirframesClientOutputFrame_Source_SourceFormat_descriptor();
  }
  static inline const ::std::string& SourceFormat_Name(SourceFormat value) {
    return AirframesClientOutputFrame_Source_SourceFormat_Name(value);
  }
  static inline bool SourceFormat_Parse(const ::std::string& name,
      SourceFormat* value) {
    return AirframesClientOutputFrame_Source_SourceFormat_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // .AirframesClientOutputFrame.Source.App app = 1;
  bool has_app() const;
  void clear_app();
  static const int kAppFieldNumber = 1;
  const ::AirframesClientOutputFrame_Source_App& app() const;
  ::AirframesClientOutputFrame_Source_App* release_app();
  ::AirframesClientOutputFrame_Source_App* mutable_app();
  void set_allocated_app(::AirframesClientOutputFrame_Source_App* app);

  // .AirframesClientOutputFrame.Source.Host host = 2;
  bool has_host() const;
  void clear_host();
  static const int kHostFieldNumber = 2;
  const ::AirframesClientOutputFrame_Source_Host& host() const;
  ::AirframesClientOutputFrame_Source_Host* release_host();
  ::AirframesClientOutputFrame_Source_Host* mutable_host();
  void set_allocated_host(::AirframesClientOutputFrame_Source_Host* host);

  // .AirframesClientOutputFrame.Source.SourceType type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  ::AirframesClientOutputFrame_Source_SourceType type() const;
  void set_type(::AirframesClientOutputFrame_Source_SourceType value);

  // .AirframesClientOutputFrame.Source.SourceFormat format = 4;
  void clear_format();
  static const int kFormatFieldNumber = 4;
  ::AirframesClientOutputFrame_Source_SourceFormat format() const;
  void set_format(::AirframesClientOutputFrame_Source_SourceFormat value);

  // @@protoc_insertion_point(class_scope:AirframesClientOutputFrame.Source)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::AirframesClientOutputFrame_Source_App* app_;
  ::AirframesClientOutputFrame_Source_Host* host_;
  int type_;
  int format_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_airframes_5fclient_5foutput_5fframe_2eproto;
};
// -------------------------------------------------------------------

class AirframesClientOutputFrame_AirframesConfig_Feed :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AirframesClientOutputFrame.AirframesConfig.Feed) */ {
 public:
  AirframesClientOutputFrame_AirframesConfig_Feed();
  virtual ~AirframesClientOutputFrame_AirframesConfig_Feed();

  AirframesClientOutputFrame_AirframesConfig_Feed(const AirframesClientOutputFrame_AirframesConfig_Feed& from);

  inline AirframesClientOutputFrame_AirframesConfig_Feed& operator=(const AirframesClientOutputFrame_AirframesConfig_Feed& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AirframesClientOutputFrame_AirframesConfig_Feed(AirframesClientOutputFrame_AirframesConfig_Feed&& from) noexcept
    : AirframesClientOutputFrame_AirframesConfig_Feed() {
    *this = ::std::move(from);
  }

  inline AirframesClientOutputFrame_AirframesConfig_Feed& operator=(AirframesClientOutputFrame_AirframesConfig_Feed&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AirframesClientOutputFrame_AirframesConfig_Feed& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AirframesClientOutputFrame_AirframesConfig_Feed* internal_default_instance() {
    return reinterpret_cast<const AirframesClientOutputFrame_AirframesConfig_Feed*>(
               &_AirframesClientOutputFrame_AirframesConfig_Feed_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    3;

  void Swap(AirframesClientOutputFrame_AirframesConfig_Feed* other);
  friend void swap(AirframesClientOutputFrame_AirframesConfig_Feed& a, AirframesClientOutputFrame_AirframesConfig_Feed& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AirframesClientOutputFrame_AirframesConfig_Feed* New() const final {
    return CreateMaybeMessage<AirframesClientOutputFrame_AirframesConfig_Feed>(nullptr);
  }

  AirframesClientOutputFrame_AirframesConfig_Feed* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AirframesClientOutputFrame_AirframesConfig_Feed>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AirframesClientOutputFrame_AirframesConfig_Feed& from);
  void MergeFrom(const AirframesClientOutputFrame_AirframesConfig_Feed& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AirframesClientOutputFrame_AirframesConfig_Feed* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string id = 1;
  void clear_id();
  static const int kIdFieldNumber = 1;
  const ::std::string& id() const;
  void set_id(const ::std::string& value);
  #if LANG_CXX11
  void set_id(::std::string&& value);
  #endif
  void set_id(const char* value);
  void set_id(const char* value, size_t size);
  ::std::string* mutable_id();
  ::std::string* release_id();
  void set_allocated_id(::std::string* id);

  // @@protoc_insertion_point(class_scope:AirframesClientOutputFrame.AirframesConfig.Feed)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr id_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_airframes_5fclient_5foutput_5fframe_2eproto;
};
// -------------------------------------------------------------------

class AirframesClientOutputFrame_AirframesConfig :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AirframesClientOutputFrame.AirframesConfig) */ {
 public:
  AirframesClientOutputFrame_AirframesConfig();
  virtual ~AirframesClientOutputFrame_AirframesConfig();

  AirframesClientOutputFrame_AirframesConfig(const AirframesClientOutputFrame_AirframesConfig& from);

  inline AirframesClientOutputFrame_AirframesConfig& operator=(const AirframesClientOutputFrame_AirframesConfig& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AirframesClientOutputFrame_AirframesConfig(AirframesClientOutputFrame_AirframesConfig&& from) noexcept
    : AirframesClientOutputFrame_AirframesConfig() {
    *this = ::std::move(from);
  }

  inline AirframesClientOutputFrame_AirframesConfig& operator=(AirframesClientOutputFrame_AirframesConfig&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AirframesClientOutputFrame_AirframesConfig& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AirframesClientOutputFrame_AirframesConfig* internal_default_instance() {
    return reinterpret_cast<const AirframesClientOutputFrame_AirframesConfig*>(
               &_AirframesClientOutputFrame_AirframesConfig_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    4;

  void Swap(AirframesClientOutputFrame_AirframesConfig* other);
  friend void swap(AirframesClientOutputFrame_AirframesConfig& a, AirframesClientOutputFrame_AirframesConfig& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AirframesClientOutputFrame_AirframesConfig* New() const final {
    return CreateMaybeMessage<AirframesClientOutputFrame_AirframesConfig>(nullptr);
  }

  AirframesClientOutputFrame_AirframesConfig* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AirframesClientOutputFrame_AirframesConfig>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AirframesClientOutputFrame_AirframesConfig& from);
  void MergeFrom(const AirframesClientOutputFrame_AirframesConfig& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AirframesClientOutputFrame_AirframesConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AirframesClientOutputFrame_AirframesConfig_Feed Feed;

  // accessors -------------------------------------------------------

  // .AirframesClientOutputFrame.AirframesConfig.Feed feed = 1;
  bool has_feed() const;
  void clear_feed();
  static const int kFeedFieldNumber = 1;
  const ::AirframesClientOutputFrame_AirframesConfig_Feed& feed() const;
  ::AirframesClientOutputFrame_AirframesConfig_Feed* release_feed();
  ::AirframesClientOutputFrame_AirframesConfig_Feed* mutable_feed();
  void set_allocated_feed(::AirframesClientOutputFrame_AirframesConfig_Feed* feed);

  // @@protoc_insertion_point(class_scope:AirframesClientOutputFrame.AirframesConfig)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::AirframesClientOutputFrame_AirframesConfig_Feed* feed_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_airframes_5fclient_5foutput_5fframe_2eproto;
};
// -------------------------------------------------------------------

class AirframesClientOutputFrame :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:AirframesClientOutputFrame) */ {
 public:
  AirframesClientOutputFrame();
  virtual ~AirframesClientOutputFrame();

  AirframesClientOutputFrame(const AirframesClientOutputFrame& from);

  inline AirframesClientOutputFrame& operator=(const AirframesClientOutputFrame& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  AirframesClientOutputFrame(AirframesClientOutputFrame&& from) noexcept
    : AirframesClientOutputFrame() {
    *this = ::std::move(from);
  }

  inline AirframesClientOutputFrame& operator=(AirframesClientOutputFrame&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor() {
    return default_instance().GetDescriptor();
  }
  static const AirframesClientOutputFrame& default_instance();

  static void InitAsDefaultInstance();  // FOR INTERNAL USE ONLY
  static inline const AirframesClientOutputFrame* internal_default_instance() {
    return reinterpret_cast<const AirframesClientOutputFrame*>(
               &_AirframesClientOutputFrame_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    5;

  void Swap(AirframesClientOutputFrame* other);
  friend void swap(AirframesClientOutputFrame& a, AirframesClientOutputFrame& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline AirframesClientOutputFrame* New() const final {
    return CreateMaybeMessage<AirframesClientOutputFrame>(nullptr);
  }

  AirframesClientOutputFrame* New(::google::protobuf::Arena* arena) const final {
    return CreateMaybeMessage<AirframesClientOutputFrame>(arena);
  }
  void CopyFrom(const ::google::protobuf::Message& from) final;
  void MergeFrom(const ::google::protobuf::Message& from) final;
  void CopyFrom(const AirframesClientOutputFrame& from);
  void MergeFrom(const AirframesClientOutputFrame& from);
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  size_t ByteSizeLong() const final;
  #if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  static const char* _InternalParse(const char* begin, const char* end, void* object, ::google::protobuf::internal::ParseContext* ctx);
  ::google::protobuf::internal::ParseFunc _ParseFunc() const final { return _InternalParse; }
  #else
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) final;
  #endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const final;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      ::google::protobuf::uint8* target) const final;
  int GetCachedSize() const final { return _cached_size_.Get(); }

  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const final;
  void InternalSwap(AirframesClientOutputFrame* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return nullptr;
  }
  inline void* MaybeArenaPtr() const {
    return nullptr;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  typedef AirframesClientOutputFrame_Source Source;
  typedef AirframesClientOutputFrame_AirframesConfig AirframesConfig;

  // accessors -------------------------------------------------------

  // string payload = 3;
  void clear_payload();
  static const int kPayloadFieldNumber = 3;
  const ::std::string& payload() const;
  void set_payload(const ::std::string& value);
  #if LANG_CXX11
  void set_payload(::std::string&& value);
  #endif
  void set_payload(const char* value);
  void set_payload(const char* value, size_t size);
  ::std::string* mutable_payload();
  ::std::string* release_payload();
  void set_allocated_payload(::std::string* payload);

  // .AirframesClientOutputFrame.Source source = 1;
  bool has_source() const;
  void clear_source();
  static const int kSourceFieldNumber = 1;
  const ::AirframesClientOutputFrame_Source& source() const;
  ::AirframesClientOutputFrame_Source* release_source();
  ::AirframesClientOutputFrame_Source* mutable_source();
  void set_allocated_source(::AirframesClientOutputFrame_Source* source);

  // .AirframesClientOutputFrame.AirframesConfig airframes = 2;
  bool has_airframes() const;
  void clear_airframes();
  static const int kAirframesFieldNumber = 2;
  const ::AirframesClientOutputFrame_AirframesConfig& airframes() const;
  ::AirframesClientOutputFrame_AirframesConfig* release_airframes();
  ::AirframesClientOutputFrame_AirframesConfig* mutable_airframes();
  void set_allocated_airframes(::AirframesClientOutputFrame_AirframesConfig* airframes);

  // @@protoc_insertion_point(class_scope:AirframesClientOutputFrame)
 private:
  class HasBitSetters;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr payload_;
  ::AirframesClientOutputFrame_Source* source_;
  ::AirframesClientOutputFrame_AirframesConfig* airframes_;
  mutable ::google::protobuf::internal::CachedSize _cached_size_;
  friend struct ::TableStruct_airframes_5fclient_5foutput_5fframe_2eproto;
};
// ===================================================================


// ===================================================================

#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// AirframesClientOutputFrame_Source_App

// .AirframesClientOutputFrame.Source.App.AppType type = 1;
inline void AirframesClientOutputFrame_Source_App::clear_type() {
  type_ = 0;
}
inline ::AirframesClientOutputFrame_Source_App_AppType AirframesClientOutputFrame_Source_App::type() const {
  // @@protoc_insertion_point(field_get:AirframesClientOutputFrame.Source.App.type)
  return static_cast< ::AirframesClientOutputFrame_Source_App_AppType >(type_);
}
inline void AirframesClientOutputFrame_Source_App::set_type(::AirframesClientOutputFrame_Source_App_AppType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:AirframesClientOutputFrame.Source.App.type)
}

// string version = 2;
inline void AirframesClientOutputFrame_Source_App::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AirframesClientOutputFrame_Source_App::version() const {
  // @@protoc_insertion_point(field_get:AirframesClientOutputFrame.Source.App.version)
  return version_.GetNoArena();
}
inline void AirframesClientOutputFrame_Source_App::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AirframesClientOutputFrame.Source.App.version)
}
#if LANG_CXX11
inline void AirframesClientOutputFrame_Source_App::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AirframesClientOutputFrame.Source.App.version)
}
#endif
inline void AirframesClientOutputFrame_Source_App::set_version(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AirframesClientOutputFrame.Source.App.version)
}
inline void AirframesClientOutputFrame_Source_App::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AirframesClientOutputFrame.Source.App.version)
}
inline ::std::string* AirframesClientOutputFrame_Source_App::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:AirframesClientOutputFrame.Source.App.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AirframesClientOutputFrame_Source_App::release_version() {
  // @@protoc_insertion_point(field_release:AirframesClientOutputFrame.Source.App.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AirframesClientOutputFrame_Source_App::set_allocated_version(::std::string* version) {
  if (version != nullptr) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:AirframesClientOutputFrame.Source.App.version)
}

// -------------------------------------------------------------------

// AirframesClientOutputFrame_Source_Host

// .AirframesClientOutputFrame.Source.Host.Platform platform = 1;
inline void AirframesClientOutputFrame_Source_Host::clear_platform() {
  platform_ = 0;
}
inline ::AirframesClientOutputFrame_Source_Host_Platform AirframesClientOutputFrame_Source_Host::platform() const {
  // @@protoc_insertion_point(field_get:AirframesClientOutputFrame.Source.Host.platform)
  return static_cast< ::AirframesClientOutputFrame_Source_Host_Platform >(platform_);
}
inline void AirframesClientOutputFrame_Source_Host::set_platform(::AirframesClientOutputFrame_Source_Host_Platform value) {
  
  platform_ = value;
  // @@protoc_insertion_point(field_set:AirframesClientOutputFrame.Source.Host.platform)
}

// .AirframesClientOutputFrame.Source.Host.OperatingSystem os = 2;
inline void AirframesClientOutputFrame_Source_Host::clear_os() {
  os_ = 0;
}
inline ::AirframesClientOutputFrame_Source_Host_OperatingSystem AirframesClientOutputFrame_Source_Host::os() const {
  // @@protoc_insertion_point(field_get:AirframesClientOutputFrame.Source.Host.os)
  return static_cast< ::AirframesClientOutputFrame_Source_Host_OperatingSystem >(os_);
}
inline void AirframesClientOutputFrame_Source_Host::set_os(::AirframesClientOutputFrame_Source_Host_OperatingSystem value) {
  
  os_ = value;
  // @@protoc_insertion_point(field_set:AirframesClientOutputFrame.Source.Host.os)
}

// string version = 3;
inline void AirframesClientOutputFrame_Source_Host::clear_version() {
  version_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AirframesClientOutputFrame_Source_Host::version() const {
  // @@protoc_insertion_point(field_get:AirframesClientOutputFrame.Source.Host.version)
  return version_.GetNoArena();
}
inline void AirframesClientOutputFrame_Source_Host::set_version(const ::std::string& value) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AirframesClientOutputFrame.Source.Host.version)
}
#if LANG_CXX11
inline void AirframesClientOutputFrame_Source_Host::set_version(::std::string&& value) {
  
  version_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AirframesClientOutputFrame.Source.Host.version)
}
#endif
inline void AirframesClientOutputFrame_Source_Host::set_version(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AirframesClientOutputFrame.Source.Host.version)
}
inline void AirframesClientOutputFrame_Source_Host::set_version(const char* value, size_t size) {
  
  version_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AirframesClientOutputFrame.Source.Host.version)
}
inline ::std::string* AirframesClientOutputFrame_Source_Host::mutable_version() {
  
  // @@protoc_insertion_point(field_mutable:AirframesClientOutputFrame.Source.Host.version)
  return version_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AirframesClientOutputFrame_Source_Host::release_version() {
  // @@protoc_insertion_point(field_release:AirframesClientOutputFrame.Source.Host.version)
  
  return version_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AirframesClientOutputFrame_Source_Host::set_allocated_version(::std::string* version) {
  if (version != nullptr) {
    
  } else {
    
  }
  version_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), version);
  // @@protoc_insertion_point(field_set_allocated:AirframesClientOutputFrame.Source.Host.version)
}

// -------------------------------------------------------------------

// AirframesClientOutputFrame_Source

// .AirframesClientOutputFrame.Source.App app = 1;
inline bool AirframesClientOutputFrame_Source::has_app() const {
  return this != internal_default_instance() && app_ != nullptr;
}
inline void AirframesClientOutputFrame_Source::clear_app() {
  if (GetArenaNoVirtual() == nullptr && app_ != nullptr) {
    delete app_;
  }
  app_ = nullptr;
}
inline const ::AirframesClientOutputFrame_Source_App& AirframesClientOutputFrame_Source::app() const {
  const ::AirframesClientOutputFrame_Source_App* p = app_;
  // @@protoc_insertion_point(field_get:AirframesClientOutputFrame.Source.app)
  return p != nullptr ? *p : *reinterpret_cast<const ::AirframesClientOutputFrame_Source_App*>(
      &::_AirframesClientOutputFrame_Source_App_default_instance_);
}
inline ::AirframesClientOutputFrame_Source_App* AirframesClientOutputFrame_Source::release_app() {
  // @@protoc_insertion_point(field_release:AirframesClientOutputFrame.Source.app)
  
  ::AirframesClientOutputFrame_Source_App* temp = app_;
  app_ = nullptr;
  return temp;
}
inline ::AirframesClientOutputFrame_Source_App* AirframesClientOutputFrame_Source::mutable_app() {
  
  if (app_ == nullptr) {
    auto* p = CreateMaybeMessage<::AirframesClientOutputFrame_Source_App>(GetArenaNoVirtual());
    app_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AirframesClientOutputFrame.Source.app)
  return app_;
}
inline void AirframesClientOutputFrame_Source::set_allocated_app(::AirframesClientOutputFrame_Source_App* app) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete app_;
  }
  if (app) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      app = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, app, submessage_arena);
    }
    
  } else {
    
  }
  app_ = app;
  // @@protoc_insertion_point(field_set_allocated:AirframesClientOutputFrame.Source.app)
}

// .AirframesClientOutputFrame.Source.Host host = 2;
inline bool AirframesClientOutputFrame_Source::has_host() const {
  return this != internal_default_instance() && host_ != nullptr;
}
inline void AirframesClientOutputFrame_Source::clear_host() {
  if (GetArenaNoVirtual() == nullptr && host_ != nullptr) {
    delete host_;
  }
  host_ = nullptr;
}
inline const ::AirframesClientOutputFrame_Source_Host& AirframesClientOutputFrame_Source::host() const {
  const ::AirframesClientOutputFrame_Source_Host* p = host_;
  // @@protoc_insertion_point(field_get:AirframesClientOutputFrame.Source.host)
  return p != nullptr ? *p : *reinterpret_cast<const ::AirframesClientOutputFrame_Source_Host*>(
      &::_AirframesClientOutputFrame_Source_Host_default_instance_);
}
inline ::AirframesClientOutputFrame_Source_Host* AirframesClientOutputFrame_Source::release_host() {
  // @@protoc_insertion_point(field_release:AirframesClientOutputFrame.Source.host)
  
  ::AirframesClientOutputFrame_Source_Host* temp = host_;
  host_ = nullptr;
  return temp;
}
inline ::AirframesClientOutputFrame_Source_Host* AirframesClientOutputFrame_Source::mutable_host() {
  
  if (host_ == nullptr) {
    auto* p = CreateMaybeMessage<::AirframesClientOutputFrame_Source_Host>(GetArenaNoVirtual());
    host_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AirframesClientOutputFrame.Source.host)
  return host_;
}
inline void AirframesClientOutputFrame_Source::set_allocated_host(::AirframesClientOutputFrame_Source_Host* host) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete host_;
  }
  if (host) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      host = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, host, submessage_arena);
    }
    
  } else {
    
  }
  host_ = host;
  // @@protoc_insertion_point(field_set_allocated:AirframesClientOutputFrame.Source.host)
}

// .AirframesClientOutputFrame.Source.SourceType type = 3;
inline void AirframesClientOutputFrame_Source::clear_type() {
  type_ = 0;
}
inline ::AirframesClientOutputFrame_Source_SourceType AirframesClientOutputFrame_Source::type() const {
  // @@protoc_insertion_point(field_get:AirframesClientOutputFrame.Source.type)
  return static_cast< ::AirframesClientOutputFrame_Source_SourceType >(type_);
}
inline void AirframesClientOutputFrame_Source::set_type(::AirframesClientOutputFrame_Source_SourceType value) {
  
  type_ = value;
  // @@protoc_insertion_point(field_set:AirframesClientOutputFrame.Source.type)
}

// .AirframesClientOutputFrame.Source.SourceFormat format = 4;
inline void AirframesClientOutputFrame_Source::clear_format() {
  format_ = 0;
}
inline ::AirframesClientOutputFrame_Source_SourceFormat AirframesClientOutputFrame_Source::format() const {
  // @@protoc_insertion_point(field_get:AirframesClientOutputFrame.Source.format)
  return static_cast< ::AirframesClientOutputFrame_Source_SourceFormat >(format_);
}
inline void AirframesClientOutputFrame_Source::set_format(::AirframesClientOutputFrame_Source_SourceFormat value) {
  
  format_ = value;
  // @@protoc_insertion_point(field_set:AirframesClientOutputFrame.Source.format)
}

// -------------------------------------------------------------------

// AirframesClientOutputFrame_AirframesConfig_Feed

// string id = 1;
inline void AirframesClientOutputFrame_AirframesConfig_Feed::clear_id() {
  id_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AirframesClientOutputFrame_AirframesConfig_Feed::id() const {
  // @@protoc_insertion_point(field_get:AirframesClientOutputFrame.AirframesConfig.Feed.id)
  return id_.GetNoArena();
}
inline void AirframesClientOutputFrame_AirframesConfig_Feed::set_id(const ::std::string& value) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AirframesClientOutputFrame.AirframesConfig.Feed.id)
}
#if LANG_CXX11
inline void AirframesClientOutputFrame_AirframesConfig_Feed::set_id(::std::string&& value) {
  
  id_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AirframesClientOutputFrame.AirframesConfig.Feed.id)
}
#endif
inline void AirframesClientOutputFrame_AirframesConfig_Feed::set_id(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AirframesClientOutputFrame.AirframesConfig.Feed.id)
}
inline void AirframesClientOutputFrame_AirframesConfig_Feed::set_id(const char* value, size_t size) {
  
  id_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AirframesClientOutputFrame.AirframesConfig.Feed.id)
}
inline ::std::string* AirframesClientOutputFrame_AirframesConfig_Feed::mutable_id() {
  
  // @@protoc_insertion_point(field_mutable:AirframesClientOutputFrame.AirframesConfig.Feed.id)
  return id_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AirframesClientOutputFrame_AirframesConfig_Feed::release_id() {
  // @@protoc_insertion_point(field_release:AirframesClientOutputFrame.AirframesConfig.Feed.id)
  
  return id_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AirframesClientOutputFrame_AirframesConfig_Feed::set_allocated_id(::std::string* id) {
  if (id != nullptr) {
    
  } else {
    
  }
  id_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), id);
  // @@protoc_insertion_point(field_set_allocated:AirframesClientOutputFrame.AirframesConfig.Feed.id)
}

// -------------------------------------------------------------------

// AirframesClientOutputFrame_AirframesConfig

// .AirframesClientOutputFrame.AirframesConfig.Feed feed = 1;
inline bool AirframesClientOutputFrame_AirframesConfig::has_feed() const {
  return this != internal_default_instance() && feed_ != nullptr;
}
inline void AirframesClientOutputFrame_AirframesConfig::clear_feed() {
  if (GetArenaNoVirtual() == nullptr && feed_ != nullptr) {
    delete feed_;
  }
  feed_ = nullptr;
}
inline const ::AirframesClientOutputFrame_AirframesConfig_Feed& AirframesClientOutputFrame_AirframesConfig::feed() const {
  const ::AirframesClientOutputFrame_AirframesConfig_Feed* p = feed_;
  // @@protoc_insertion_point(field_get:AirframesClientOutputFrame.AirframesConfig.feed)
  return p != nullptr ? *p : *reinterpret_cast<const ::AirframesClientOutputFrame_AirframesConfig_Feed*>(
      &::_AirframesClientOutputFrame_AirframesConfig_Feed_default_instance_);
}
inline ::AirframesClientOutputFrame_AirframesConfig_Feed* AirframesClientOutputFrame_AirframesConfig::release_feed() {
  // @@protoc_insertion_point(field_release:AirframesClientOutputFrame.AirframesConfig.feed)
  
  ::AirframesClientOutputFrame_AirframesConfig_Feed* temp = feed_;
  feed_ = nullptr;
  return temp;
}
inline ::AirframesClientOutputFrame_AirframesConfig_Feed* AirframesClientOutputFrame_AirframesConfig::mutable_feed() {
  
  if (feed_ == nullptr) {
    auto* p = CreateMaybeMessage<::AirframesClientOutputFrame_AirframesConfig_Feed>(GetArenaNoVirtual());
    feed_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AirframesClientOutputFrame.AirframesConfig.feed)
  return feed_;
}
inline void AirframesClientOutputFrame_AirframesConfig::set_allocated_feed(::AirframesClientOutputFrame_AirframesConfig_Feed* feed) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete feed_;
  }
  if (feed) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      feed = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, feed, submessage_arena);
    }
    
  } else {
    
  }
  feed_ = feed;
  // @@protoc_insertion_point(field_set_allocated:AirframesClientOutputFrame.AirframesConfig.feed)
}

// -------------------------------------------------------------------

// AirframesClientOutputFrame

// .AirframesClientOutputFrame.Source source = 1;
inline bool AirframesClientOutputFrame::has_source() const {
  return this != internal_default_instance() && source_ != nullptr;
}
inline void AirframesClientOutputFrame::clear_source() {
  if (GetArenaNoVirtual() == nullptr && source_ != nullptr) {
    delete source_;
  }
  source_ = nullptr;
}
inline const ::AirframesClientOutputFrame_Source& AirframesClientOutputFrame::source() const {
  const ::AirframesClientOutputFrame_Source* p = source_;
  // @@protoc_insertion_point(field_get:AirframesClientOutputFrame.source)
  return p != nullptr ? *p : *reinterpret_cast<const ::AirframesClientOutputFrame_Source*>(
      &::_AirframesClientOutputFrame_Source_default_instance_);
}
inline ::AirframesClientOutputFrame_Source* AirframesClientOutputFrame::release_source() {
  // @@protoc_insertion_point(field_release:AirframesClientOutputFrame.source)
  
  ::AirframesClientOutputFrame_Source* temp = source_;
  source_ = nullptr;
  return temp;
}
inline ::AirframesClientOutputFrame_Source* AirframesClientOutputFrame::mutable_source() {
  
  if (source_ == nullptr) {
    auto* p = CreateMaybeMessage<::AirframesClientOutputFrame_Source>(GetArenaNoVirtual());
    source_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AirframesClientOutputFrame.source)
  return source_;
}
inline void AirframesClientOutputFrame::set_allocated_source(::AirframesClientOutputFrame_Source* source) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete source_;
  }
  if (source) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      source = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, source, submessage_arena);
    }
    
  } else {
    
  }
  source_ = source;
  // @@protoc_insertion_point(field_set_allocated:AirframesClientOutputFrame.source)
}

// .AirframesClientOutputFrame.AirframesConfig airframes = 2;
inline bool AirframesClientOutputFrame::has_airframes() const {
  return this != internal_default_instance() && airframes_ != nullptr;
}
inline void AirframesClientOutputFrame::clear_airframes() {
  if (GetArenaNoVirtual() == nullptr && airframes_ != nullptr) {
    delete airframes_;
  }
  airframes_ = nullptr;
}
inline const ::AirframesClientOutputFrame_AirframesConfig& AirframesClientOutputFrame::airframes() const {
  const ::AirframesClientOutputFrame_AirframesConfig* p = airframes_;
  // @@protoc_insertion_point(field_get:AirframesClientOutputFrame.airframes)
  return p != nullptr ? *p : *reinterpret_cast<const ::AirframesClientOutputFrame_AirframesConfig*>(
      &::_AirframesClientOutputFrame_AirframesConfig_default_instance_);
}
inline ::AirframesClientOutputFrame_AirframesConfig* AirframesClientOutputFrame::release_airframes() {
  // @@protoc_insertion_point(field_release:AirframesClientOutputFrame.airframes)
  
  ::AirframesClientOutputFrame_AirframesConfig* temp = airframes_;
  airframes_ = nullptr;
  return temp;
}
inline ::AirframesClientOutputFrame_AirframesConfig* AirframesClientOutputFrame::mutable_airframes() {
  
  if (airframes_ == nullptr) {
    auto* p = CreateMaybeMessage<::AirframesClientOutputFrame_AirframesConfig>(GetArenaNoVirtual());
    airframes_ = p;
  }
  // @@protoc_insertion_point(field_mutable:AirframesClientOutputFrame.airframes)
  return airframes_;
}
inline void AirframesClientOutputFrame::set_allocated_airframes(::AirframesClientOutputFrame_AirframesConfig* airframes) {
  ::google::protobuf::Arena* message_arena = GetArenaNoVirtual();
  if (message_arena == nullptr) {
    delete airframes_;
  }
  if (airframes) {
    ::google::protobuf::Arena* submessage_arena = nullptr;
    if (message_arena != submessage_arena) {
      airframes = ::google::protobuf::internal::GetOwnedMessage(
          message_arena, airframes, submessage_arena);
    }
    
  } else {
    
  }
  airframes_ = airframes;
  // @@protoc_insertion_point(field_set_allocated:AirframesClientOutputFrame.airframes)
}

// string payload = 3;
inline void AirframesClientOutputFrame::clear_payload() {
  payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& AirframesClientOutputFrame::payload() const {
  // @@protoc_insertion_point(field_get:AirframesClientOutputFrame.payload)
  return payload_.GetNoArena();
}
inline void AirframesClientOutputFrame::set_payload(const ::std::string& value) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:AirframesClientOutputFrame.payload)
}
#if LANG_CXX11
inline void AirframesClientOutputFrame::set_payload(::std::string&& value) {
  
  payload_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:AirframesClientOutputFrame.payload)
}
#endif
inline void AirframesClientOutputFrame::set_payload(const char* value) {
  GOOGLE_DCHECK(value != nullptr);
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:AirframesClientOutputFrame.payload)
}
inline void AirframesClientOutputFrame::set_payload(const char* value, size_t size) {
  
  payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:AirframesClientOutputFrame.payload)
}
inline ::std::string* AirframesClientOutputFrame::mutable_payload() {
  
  // @@protoc_insertion_point(field_mutable:AirframesClientOutputFrame.payload)
  return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* AirframesClientOutputFrame::release_payload() {
  // @@protoc_insertion_point(field_release:AirframesClientOutputFrame.payload)
  
  return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void AirframesClientOutputFrame::set_allocated_payload(::std::string* payload) {
  if (payload != nullptr) {
    
  } else {
    
  }
  payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
  // @@protoc_insertion_point(field_set_allocated:AirframesClientOutputFrame.payload)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


namespace google {
namespace protobuf {

template <> struct is_proto_enum< ::AirframesClientOutputFrame_Source_App_AppType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AirframesClientOutputFrame_Source_App_AppType>() {
  return ::AirframesClientOutputFrame_Source_App_AppType_descriptor();
}
template <> struct is_proto_enum< ::AirframesClientOutputFrame_Source_Host_Platform> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AirframesClientOutputFrame_Source_Host_Platform>() {
  return ::AirframesClientOutputFrame_Source_Host_Platform_descriptor();
}
template <> struct is_proto_enum< ::AirframesClientOutputFrame_Source_Host_OperatingSystem> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AirframesClientOutputFrame_Source_Host_OperatingSystem>() {
  return ::AirframesClientOutputFrame_Source_Host_OperatingSystem_descriptor();
}
template <> struct is_proto_enum< ::AirframesClientOutputFrame_Source_SourceType> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AirframesClientOutputFrame_Source_SourceType>() {
  return ::AirframesClientOutputFrame_Source_SourceType_descriptor();
}
template <> struct is_proto_enum< ::AirframesClientOutputFrame_Source_SourceFormat> : ::std::true_type {};
template <>
inline const EnumDescriptor* GetEnumDescriptor< ::AirframesClientOutputFrame_Source_SourceFormat>() {
  return ::AirframesClientOutputFrame_Source_SourceFormat_descriptor();
}

}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)

#include <google/protobuf/port_undef.inc>
#endif  // PROTOBUF_INCLUDED_airframes_5fclient_5foutput_5fframe_2eproto
