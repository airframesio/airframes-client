// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: airframes_client_frame.proto

#include "airframes_client_frame.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_airframes_5fclient_5fframe_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AcarsdecMessage_airframes_5fclient_5fframe_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_airframes_5fclient_5fframe_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AirframesClientFrame_AirframesConfig_airframes_5fclient_5fframe_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_airframes_5fclient_5fframe_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AirframesClientFrame_AirframesConfig_Feed_airframes_5fclient_5fframe_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_airframes_5fclient_5fframe_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_AirframesClientFrame_Source_airframes_5fclient_5fframe_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_airframes_5fclient_5fframe_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AirframesClientFrame_Source_App_airframes_5fclient_5fframe_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_airframes_5fclient_5fframe_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AirframesClientFrame_Source_Host_airframes_5fclient_5fframe_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_airframes_5fclient_5fframe_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vdlm2decMessage_airframes_5fclient_5fframe_2eproto;
namespace airframes {
class AcarsdecMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AcarsdecMessage> _instance;
} _AcarsdecMessage_default_instance_;
class Vdlm2decMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<Vdlm2decMessage> _instance;
} _Vdlm2decMessage_default_instance_;
class TestRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<TestRequest> _instance;
} _TestRequest_default_instance_;
class FrameRequestDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<FrameRequest> _instance;
} _FrameRequest_default_instance_;
class AirframesClientFrame_Source_AppDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AirframesClientFrame_Source_App> _instance;
} _AirframesClientFrame_Source_App_default_instance_;
class AirframesClientFrame_Source_HostDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AirframesClientFrame_Source_Host> _instance;
} _AirframesClientFrame_Source_Host_default_instance_;
class AirframesClientFrame_SourceDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AirframesClientFrame_Source> _instance;
} _AirframesClientFrame_Source_default_instance_;
class AirframesClientFrame_AirframesConfig_FeedDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AirframesClientFrame_AirframesConfig_Feed> _instance;
} _AirframesClientFrame_AirframesConfig_Feed_default_instance_;
class AirframesClientFrame_AirframesConfigDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AirframesClientFrame_AirframesConfig> _instance;
} _AirframesClientFrame_AirframesConfig_default_instance_;
class AirframesClientFrameDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<AirframesClientFrame> _instance;
  const ::airframes::AcarsdecMessage* acarsdec_message_;
  const ::airframes::Vdlm2decMessage* vdlm2dec_message_;
} _AirframesClientFrame_default_instance_;
}  // namespace airframes
static void InitDefaultsscc_info_AcarsdecMessage_airframes_5fclient_5fframe_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::airframes::_AcarsdecMessage_default_instance_;
    new (ptr) ::airframes::AcarsdecMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::airframes::AcarsdecMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AcarsdecMessage_airframes_5fclient_5fframe_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AcarsdecMessage_airframes_5fclient_5fframe_2eproto}, {}};

static void InitDefaultsscc_info_AirframesClientFrame_airframes_5fclient_5fframe_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::airframes::_AirframesClientFrame_default_instance_;
    new (ptr) ::airframes::AirframesClientFrame();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::airframes::AirframesClientFrame::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<4> scc_info_AirframesClientFrame_airframes_5fclient_5fframe_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 4, 0, InitDefaultsscc_info_AirframesClientFrame_airframes_5fclient_5fframe_2eproto}, {
      &scc_info_AirframesClientFrame_Source_airframes_5fclient_5fframe_2eproto.base,
      &scc_info_AirframesClientFrame_AirframesConfig_airframes_5fclient_5fframe_2eproto.base,
      &scc_info_AcarsdecMessage_airframes_5fclient_5fframe_2eproto.base,
      &scc_info_Vdlm2decMessage_airframes_5fclient_5fframe_2eproto.base,}};

static void InitDefaultsscc_info_AirframesClientFrame_AirframesConfig_airframes_5fclient_5fframe_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::airframes::_AirframesClientFrame_AirframesConfig_default_instance_;
    new (ptr) ::airframes::AirframesClientFrame_AirframesConfig();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::airframes::AirframesClientFrame_AirframesConfig::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<1> scc_info_AirframesClientFrame_AirframesConfig_airframes_5fclient_5fframe_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 1, 0, InitDefaultsscc_info_AirframesClientFrame_AirframesConfig_airframes_5fclient_5fframe_2eproto}, {
      &scc_info_AirframesClientFrame_AirframesConfig_Feed_airframes_5fclient_5fframe_2eproto.base,}};

static void InitDefaultsscc_info_AirframesClientFrame_AirframesConfig_Feed_airframes_5fclient_5fframe_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::airframes::_AirframesClientFrame_AirframesConfig_Feed_default_instance_;
    new (ptr) ::airframes::AirframesClientFrame_AirframesConfig_Feed();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::airframes::AirframesClientFrame_AirframesConfig_Feed::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AirframesClientFrame_AirframesConfig_Feed_airframes_5fclient_5fframe_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AirframesClientFrame_AirframesConfig_Feed_airframes_5fclient_5fframe_2eproto}, {}};

static void InitDefaultsscc_info_AirframesClientFrame_Source_airframes_5fclient_5fframe_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::airframes::_AirframesClientFrame_Source_default_instance_;
    new (ptr) ::airframes::AirframesClientFrame_Source();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::airframes::AirframesClientFrame_Source::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_AirframesClientFrame_Source_airframes_5fclient_5fframe_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, 0, InitDefaultsscc_info_AirframesClientFrame_Source_airframes_5fclient_5fframe_2eproto}, {
      &scc_info_AirframesClientFrame_Source_App_airframes_5fclient_5fframe_2eproto.base,
      &scc_info_AirframesClientFrame_Source_Host_airframes_5fclient_5fframe_2eproto.base,}};

static void InitDefaultsscc_info_AirframesClientFrame_Source_App_airframes_5fclient_5fframe_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::airframes::_AirframesClientFrame_Source_App_default_instance_;
    new (ptr) ::airframes::AirframesClientFrame_Source_App();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::airframes::AirframesClientFrame_Source_App::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AirframesClientFrame_Source_App_airframes_5fclient_5fframe_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AirframesClientFrame_Source_App_airframes_5fclient_5fframe_2eproto}, {}};

static void InitDefaultsscc_info_AirframesClientFrame_Source_Host_airframes_5fclient_5fframe_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::airframes::_AirframesClientFrame_Source_Host_default_instance_;
    new (ptr) ::airframes::AirframesClientFrame_Source_Host();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::airframes::AirframesClientFrame_Source_Host::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_AirframesClientFrame_Source_Host_airframes_5fclient_5fframe_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_AirframesClientFrame_Source_Host_airframes_5fclient_5fframe_2eproto}, {}};

static void InitDefaultsscc_info_FrameRequest_airframes_5fclient_5fframe_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::airframes::_FrameRequest_default_instance_;
    new (ptr) ::airframes::FrameRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::airframes::FrameRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_FrameRequest_airframes_5fclient_5fframe_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_FrameRequest_airframes_5fclient_5fframe_2eproto}, {}};

static void InitDefaultsscc_info_TestRequest_airframes_5fclient_5fframe_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::airframes::_TestRequest_default_instance_;
    new (ptr) ::airframes::TestRequest();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::airframes::TestRequest::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_TestRequest_airframes_5fclient_5fframe_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_TestRequest_airframes_5fclient_5fframe_2eproto}, {}};

static void InitDefaultsscc_info_Vdlm2decMessage_airframes_5fclient_5fframe_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::airframes::_Vdlm2decMessage_default_instance_;
    new (ptr) ::airframes::Vdlm2decMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::airframes::Vdlm2decMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_Vdlm2decMessage_airframes_5fclient_5fframe_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_Vdlm2decMessage_airframes_5fclient_5fframe_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_airframes_5fclient_5fframe_2eproto[10];
static const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* file_level_enum_descriptors_airframes_5fclient_5fframe_2eproto[5];
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_airframes_5fclient_5fframe_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_airframes_5fclient_5fframe_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::airframes::AcarsdecMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::airframes::AcarsdecMessage, timestamp_),
  PROTOBUF_FIELD_OFFSET(::airframes::AcarsdecMessage, station_id_),
  PROTOBUF_FIELD_OFFSET(::airframes::AcarsdecMessage, channel_),
  PROTOBUF_FIELD_OFFSET(::airframes::AcarsdecMessage, frequency_),
  PROTOBUF_FIELD_OFFSET(::airframes::AcarsdecMessage, level_),
  PROTOBUF_FIELD_OFFSET(::airframes::AcarsdecMessage, error_),
  PROTOBUF_FIELD_OFFSET(::airframes::AcarsdecMessage, mode_),
  PROTOBUF_FIELD_OFFSET(::airframes::AcarsdecMessage, label_),
  PROTOBUF_FIELD_OFFSET(::airframes::AcarsdecMessage, block_id_),
  PROTOBUF_FIELD_OFFSET(::airframes::AcarsdecMessage, ack_),
  PROTOBUF_FIELD_OFFSET(::airframes::AcarsdecMessage, tail_),
  PROTOBUF_FIELD_OFFSET(::airframes::AcarsdecMessage, flight_),
  PROTOBUF_FIELD_OFFSET(::airframes::AcarsdecMessage, message_number_),
  PROTOBUF_FIELD_OFFSET(::airframes::AcarsdecMessage, text_),
  PROTOBUF_FIELD_OFFSET(::airframes::AcarsdecMessage, end_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::airframes::Vdlm2decMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::airframes::Vdlm2decMessage, timestamp_),
  PROTOBUF_FIELD_OFFSET(::airframes::Vdlm2decMessage, station_id_),
  PROTOBUF_FIELD_OFFSET(::airframes::Vdlm2decMessage, channel_),
  PROTOBUF_FIELD_OFFSET(::airframes::Vdlm2decMessage, frequency_),
  PROTOBUF_FIELD_OFFSET(::airframes::Vdlm2decMessage, from_icao_),
  PROTOBUF_FIELD_OFFSET(::airframes::Vdlm2decMessage, to_icao_),
  PROTOBUF_FIELD_OFFSET(::airframes::Vdlm2decMessage, level_),
  PROTOBUF_FIELD_OFFSET(::airframes::Vdlm2decMessage, error_),
  PROTOBUF_FIELD_OFFSET(::airframes::Vdlm2decMessage, mode_),
  PROTOBUF_FIELD_OFFSET(::airframes::Vdlm2decMessage, label_),
  PROTOBUF_FIELD_OFFSET(::airframes::Vdlm2decMessage, block_id_),
  PROTOBUF_FIELD_OFFSET(::airframes::Vdlm2decMessage, ack_),
  PROTOBUF_FIELD_OFFSET(::airframes::Vdlm2decMessage, tail_),
  PROTOBUF_FIELD_OFFSET(::airframes::Vdlm2decMessage, flight_),
  PROTOBUF_FIELD_OFFSET(::airframes::Vdlm2decMessage, message_number_),
  PROTOBUF_FIELD_OFFSET(::airframes::Vdlm2decMessage, text_),
  PROTOBUF_FIELD_OFFSET(::airframes::Vdlm2decMessage, end_),
  PROTOBUF_FIELD_OFFSET(::airframes::Vdlm2decMessage, departure_airport_),
  PROTOBUF_FIELD_OFFSET(::airframes::Vdlm2decMessage, destination_airport_),
  PROTOBUF_FIELD_OFFSET(::airframes::Vdlm2decMessage, arrival_eta_),
  PROTOBUF_FIELD_OFFSET(::airframes::Vdlm2decMessage, gate_out_),
  PROTOBUF_FIELD_OFFSET(::airframes::Vdlm2decMessage, ground_off_),
  PROTOBUF_FIELD_OFFSET(::airframes::Vdlm2decMessage, ground_on_),
  PROTOBUF_FIELD_OFFSET(::airframes::Vdlm2decMessage, gate_in_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::airframes::TestRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::airframes::FrameRequest, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::airframes::AirframesClientFrame_Source_App, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::airframes::AirframesClientFrame_Source_App, type_),
  PROTOBUF_FIELD_OFFSET(::airframes::AirframesClientFrame_Source_App, version_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::airframes::AirframesClientFrame_Source_Host, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::airframes::AirframesClientFrame_Source_Host, platform_),
  PROTOBUF_FIELD_OFFSET(::airframes::AirframesClientFrame_Source_Host, os_),
  PROTOBUF_FIELD_OFFSET(::airframes::AirframesClientFrame_Source_Host, version_),
  PROTOBUF_FIELD_OFFSET(::airframes::AirframesClientFrame_Source_Host, node_name_),
  PROTOBUF_FIELD_OFFSET(::airframes::AirframesClientFrame_Source_Host, node_ip_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::airframes::AirframesClientFrame_Source, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::airframes::AirframesClientFrame_Source, app_),
  PROTOBUF_FIELD_OFFSET(::airframes::AirframesClientFrame_Source, host_),
  PROTOBUF_FIELD_OFFSET(::airframes::AirframesClientFrame_Source, type_),
  PROTOBUF_FIELD_OFFSET(::airframes::AirframesClientFrame_Source, format_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::airframes::AirframesClientFrame_AirframesConfig_Feed, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::airframes::AirframesClientFrame_AirframesConfig_Feed, id_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::airframes::AirframesClientFrame_AirframesConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::airframes::AirframesClientFrame_AirframesConfig, feed_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::airframes::AirframesClientFrame, _internal_metadata_),
  ~0u,  // no _extensions_
  PROTOBUF_FIELD_OFFSET(::airframes::AirframesClientFrame, _oneof_case_[0]),
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::airframes::AirframesClientFrame, source_),
  PROTOBUF_FIELD_OFFSET(::airframes::AirframesClientFrame, airframes_),
  offsetof(::airframes::AirframesClientFrameDefaultTypeInternal, acarsdec_message_),
  offsetof(::airframes::AirframesClientFrameDefaultTypeInternal, vdlm2dec_message_),
  PROTOBUF_FIELD_OFFSET(::airframes::AirframesClientFrame, message_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::airframes::AcarsdecMessage)},
  { 20, -1, sizeof(::airframes::Vdlm2decMessage)},
  { 49, -1, sizeof(::airframes::TestRequest)},
  { 54, -1, sizeof(::airframes::FrameRequest)},
  { 59, -1, sizeof(::airframes::AirframesClientFrame_Source_App)},
  { 66, -1, sizeof(::airframes::AirframesClientFrame_Source_Host)},
  { 76, -1, sizeof(::airframes::AirframesClientFrame_Source)},
  { 85, -1, sizeof(::airframes::AirframesClientFrame_AirframesConfig_Feed)},
  { 91, -1, sizeof(::airframes::AirframesClientFrame_AirframesConfig)},
  { 97, -1, sizeof(::airframes::AirframesClientFrame)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::airframes::_AcarsdecMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::airframes::_Vdlm2decMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::airframes::_TestRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::airframes::_FrameRequest_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::airframes::_AirframesClientFrame_Source_App_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::airframes::_AirframesClientFrame_Source_Host_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::airframes::_AirframesClientFrame_Source_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::airframes::_AirframesClientFrame_AirframesConfig_Feed_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::airframes::_AirframesClientFrame_AirframesConfig_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::airframes::_AirframesClientFrame_default_instance_),
};

const char descriptor_table_protodef_airframes_5fclient_5fframe_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\034airframes_client_frame.proto\022\tairframe"
  "s\"\207\002\n\017AcarsdecMessage\022\021\n\ttimestamp\030\001 \001(\001"
  "\022\022\n\nstation_id\030\002 \001(\t\022\017\n\007channel\030\003 \001(\r\022\021\n"
  "\tfrequency\030\004 \001(\001\022\r\n\005level\030\005 \001(\021\022\r\n\005error"
  "\030\006 \001(\r\022\014\n\004mode\030\007 \001(\t\022\r\n\005label\030\010 \001(\t\022\020\n\010b"
  "lock_id\030\t \001(\t\022\013\n\003ack\030\n \001(\t\022\014\n\004tail\030\013 \001(\t"
  "\022\016\n\006flight\030\014 \001(\t\022\026\n\016message_number\030\r \001(\t"
  "\022\014\n\004text\030\016 \001(\t\022\013\n\003end\030\017 \001(\010\"\302\003\n\017Vdlm2dec"
  "Message\022\021\n\ttimestamp\030\001 \001(\001\022\022\n\nstation_id"
  "\030\002 \001(\t\022\017\n\007channel\030\003 \001(\r\022\021\n\tfrequency\030\004 \001"
  "(\001\022\021\n\tfrom_icao\030\005 \001(\r\022\017\n\007to_icao\030\006 \001(\r\022\r"
  "\n\005level\030\007 \001(\021\022\r\n\005error\030\010 \001(\r\022\014\n\004mode\030\t \001"
  "(\t\022\r\n\005label\030\n \001(\t\022\020\n\010block_id\030\013 \001(\t\022\013\n\003a"
  "ck\030\014 \001(\t\022\014\n\004tail\030\r \001(\t\022\016\n\006flight\030\016 \001(\t\022\026"
  "\n\016message_number\030\017 \001(\t\022\014\n\004text\030\020 \001(\t\022\013\n\003"
  "end\030\021 \001(\010\022\031\n\021departure_airport\030\022 \001(\t\022\033\n\023"
  "destination_airport\030\023 \001(\t\022\023\n\013arrival_eta"
  "\030\024 \001(\t\022\020\n\010gate_out\030\025 \001(\t\022\022\n\nground_off\030\026"
  " \001(\t\022\021\n\tground_on\030\027 \001(\t\022\017\n\007gate_in\030\030 \001(\t"
  "\"\r\n\013TestRequest\"\016\n\014FrameRequest\"\232\013\n\024Airf"
  "ramesClientFrame\0226\n\006source\030\001 \001(\0132&.airfr"
  "ames.AirframesClientFrame.Source\022B\n\tairf"
  "rames\030\002 \001(\0132/.airframes.AirframesClientF"
  "rame.AirframesConfig\0226\n\020acarsdec_message"
  "\030\003 \001(\0132\032.airframes.AcarsdecMessageH\000\0226\n\020"
  "vdlm2dec_message\030\004 \001(\0132\032.airframes.Vdlm2"
  "decMessageH\000\032\237\010\n\006Source\0227\n\003app\030\001 \001(\0132*.a"
  "irframes.AirframesClientFrame.Source.App"
  "\0229\n\004host\030\002 \001(\0132+.airframes.AirframesClie"
  "ntFrame.Source.Host\022\?\n\004type\030\003 \001(\01621.airf"
  "rames.AirframesClientFrame.Source.Source"
  "Type\022C\n\006format\030\004 \001(\01623.airframes.Airfram"
  "esClientFrame.Source.SourceFormat\032\331\001\n\003Ap"
  "p\022@\n\004type\030\001 \001(\01622.airframes.AirframesCli"
  "entFrame.Source.App.AppType\022\017\n\007version\030\002"
  " \001(\t\"\177\n\007AppType\022\024\n\020UNKNOWN_APP_TYPE\020\000\022\014\n"
  "\010ACARSDEC\020\001\022\016\n\nACARSDECO2\020\002\022\014\n\010VDLM2DEC\020"
  "\003\022\014\n\010DUMPVDL2\020\004\022\t\n\005JAERO\020\005\022\013\n\007PC_HFDL\020\006\022"
  "\014\n\010SORCERER\020\007\032\376\002\n\004Host\022F\n\010platform\030\001 \001(\016"
  "24.airframes.AirframesClientFrame.Source"
  ".Host.Platform\022G\n\002os\030\002 \001(\0162;.airframes.A"
  "irframesClientFrame.Source.Host.Operatin"
  "gSystem\022\017\n\007version\030\003 \001(\t\022\021\n\tnode_name\030\004 "
  "\001(\t\022\017\n\007node_ip\030\005 \001(\t\"\\\n\010Platform\022\024\n\020UNKN"
  "OWN_PLATFORM\020\000\022\n\n\006X86_32\020\001\022\n\n\006X86_64\020\002\022\n"
  "\n\006ARM_V6\020\003\022\n\n\006ARM_V7\020\004\022\n\n\006ARM_64\020\005\"R\n\017Op"
  "eratingSystem\022\034\n\030UNKNOWN_OPERATING_SYSTE"
  "M\020\000\022\t\n\005LINUX\020\001\022\t\n\005MACOS\020\002\022\013\n\007WINDOWS\020\003\"4"
  "\n\nSourceType\022\t\n\005ACARS\020\000\022\007\n\003VDL\020\001\022\010\n\004HFDL"
  "\020\002\022\010\n\004AERO\020\003\"\207\001\n\014SourceFormat\022\027\n\023HUMAN_R"
  "EADABLE_TEXT\020\000\022\t\n\005BEAST\020\001\022\010\n\004SBS3\020\002\022\021\n\rP"
  "LANE_PLOTTER\020\003\022\020\n\014JSON_GENERIC\020\004\022\021\n\rJSON"
  "_ACARSDEC\020\005\022\021\n\rJSON_VDLM2DEC\020\006\032i\n\017Airfra"
  "mesConfig\022B\n\004feed\030\001 \001(\01324.airframes.Airf"
  "ramesClientFrame.AirframesConfig.Feed\032\022\n"
  "\004Feed\022\n\n\002id\030\001 \001(\tB\t\n\007message2\276\002\n\tAirfram"
  "es\022M\n\020SendExampleFrame\022\026.airframes.TestR"
  "equest\032\037.airframes.AirframesClientFrame\""
  "\000\022O\n\tSendFrame\022\037.airframes.AirframesClie"
  "ntFrame\032\037.airframes.AirframesClientFrame"
  "\"\000\022F\n\010GetFrame\022\027.airframes.FrameRequest\032"
  "\037.airframes.AirframesClientFrame\"\000\022I\n\tGe"
  "tFrames\022\027.airframes.FrameRequest\032\037.airfr"
  "ames.AirframesClientFrame\"\0000\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_airframes_5fclient_5fframe_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_airframes_5fclient_5fframe_2eproto_sccs[10] = {
  &scc_info_AcarsdecMessage_airframes_5fclient_5fframe_2eproto.base,
  &scc_info_AirframesClientFrame_airframes_5fclient_5fframe_2eproto.base,
  &scc_info_AirframesClientFrame_AirframesConfig_airframes_5fclient_5fframe_2eproto.base,
  &scc_info_AirframesClientFrame_AirframesConfig_Feed_airframes_5fclient_5fframe_2eproto.base,
  &scc_info_AirframesClientFrame_Source_airframes_5fclient_5fframe_2eproto.base,
  &scc_info_AirframesClientFrame_Source_App_airframes_5fclient_5fframe_2eproto.base,
  &scc_info_AirframesClientFrame_Source_Host_airframes_5fclient_5fframe_2eproto.base,
  &scc_info_FrameRequest_airframes_5fclient_5fframe_2eproto.base,
  &scc_info_TestRequest_airframes_5fclient_5fframe_2eproto.base,
  &scc_info_Vdlm2decMessage_airframes_5fclient_5fframe_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_airframes_5fclient_5fframe_2eproto_once;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_airframes_5fclient_5fframe_2eproto = {
  false, false, descriptor_table_protodef_airframes_5fclient_5fframe_2eproto, "airframes_client_frame.proto", 2557,
  &descriptor_table_airframes_5fclient_5fframe_2eproto_once, descriptor_table_airframes_5fclient_5fframe_2eproto_sccs, descriptor_table_airframes_5fclient_5fframe_2eproto_deps, 10, 0,
  schemas, file_default_instances, TableStruct_airframes_5fclient_5fframe_2eproto::offsets,
  file_level_metadata_airframes_5fclient_5fframe_2eproto, 10, file_level_enum_descriptors_airframes_5fclient_5fframe_2eproto, file_level_service_descriptors_airframes_5fclient_5fframe_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_airframes_5fclient_5fframe_2eproto = (static_cast<void>(::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_airframes_5fclient_5fframe_2eproto)), true);
namespace airframes {
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AirframesClientFrame_Source_App_AppType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_airframes_5fclient_5fframe_2eproto);
  return file_level_enum_descriptors_airframes_5fclient_5fframe_2eproto[0];
}
bool AirframesClientFrame_Source_App_AppType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr AirframesClientFrame_Source_App_AppType AirframesClientFrame_Source_App::UNKNOWN_APP_TYPE;
constexpr AirframesClientFrame_Source_App_AppType AirframesClientFrame_Source_App::ACARSDEC;
constexpr AirframesClientFrame_Source_App_AppType AirframesClientFrame_Source_App::ACARSDECO2;
constexpr AirframesClientFrame_Source_App_AppType AirframesClientFrame_Source_App::VDLM2DEC;
constexpr AirframesClientFrame_Source_App_AppType AirframesClientFrame_Source_App::DUMPVDL2;
constexpr AirframesClientFrame_Source_App_AppType AirframesClientFrame_Source_App::JAERO;
constexpr AirframesClientFrame_Source_App_AppType AirframesClientFrame_Source_App::PC_HFDL;
constexpr AirframesClientFrame_Source_App_AppType AirframesClientFrame_Source_App::SORCERER;
constexpr AirframesClientFrame_Source_App_AppType AirframesClientFrame_Source_App::AppType_MIN;
constexpr AirframesClientFrame_Source_App_AppType AirframesClientFrame_Source_App::AppType_MAX;
constexpr int AirframesClientFrame_Source_App::AppType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AirframesClientFrame_Source_Host_Platform_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_airframes_5fclient_5fframe_2eproto);
  return file_level_enum_descriptors_airframes_5fclient_5fframe_2eproto[1];
}
bool AirframesClientFrame_Source_Host_Platform_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr AirframesClientFrame_Source_Host_Platform AirframesClientFrame_Source_Host::UNKNOWN_PLATFORM;
constexpr AirframesClientFrame_Source_Host_Platform AirframesClientFrame_Source_Host::X86_32;
constexpr AirframesClientFrame_Source_Host_Platform AirframesClientFrame_Source_Host::X86_64;
constexpr AirframesClientFrame_Source_Host_Platform AirframesClientFrame_Source_Host::ARM_V6;
constexpr AirframesClientFrame_Source_Host_Platform AirframesClientFrame_Source_Host::ARM_V7;
constexpr AirframesClientFrame_Source_Host_Platform AirframesClientFrame_Source_Host::ARM_64;
constexpr AirframesClientFrame_Source_Host_Platform AirframesClientFrame_Source_Host::Platform_MIN;
constexpr AirframesClientFrame_Source_Host_Platform AirframesClientFrame_Source_Host::Platform_MAX;
constexpr int AirframesClientFrame_Source_Host::Platform_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AirframesClientFrame_Source_Host_OperatingSystem_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_airframes_5fclient_5fframe_2eproto);
  return file_level_enum_descriptors_airframes_5fclient_5fframe_2eproto[2];
}
bool AirframesClientFrame_Source_Host_OperatingSystem_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr AirframesClientFrame_Source_Host_OperatingSystem AirframesClientFrame_Source_Host::UNKNOWN_OPERATING_SYSTEM;
constexpr AirframesClientFrame_Source_Host_OperatingSystem AirframesClientFrame_Source_Host::LINUX;
constexpr AirframesClientFrame_Source_Host_OperatingSystem AirframesClientFrame_Source_Host::MACOS;
constexpr AirframesClientFrame_Source_Host_OperatingSystem AirframesClientFrame_Source_Host::WINDOWS;
constexpr AirframesClientFrame_Source_Host_OperatingSystem AirframesClientFrame_Source_Host::OperatingSystem_MIN;
constexpr AirframesClientFrame_Source_Host_OperatingSystem AirframesClientFrame_Source_Host::OperatingSystem_MAX;
constexpr int AirframesClientFrame_Source_Host::OperatingSystem_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AirframesClientFrame_Source_SourceType_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_airframes_5fclient_5fframe_2eproto);
  return file_level_enum_descriptors_airframes_5fclient_5fframe_2eproto[3];
}
bool AirframesClientFrame_Source_SourceType_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr AirframesClientFrame_Source_SourceType AirframesClientFrame_Source::ACARS;
constexpr AirframesClientFrame_Source_SourceType AirframesClientFrame_Source::VDL;
constexpr AirframesClientFrame_Source_SourceType AirframesClientFrame_Source::HFDL;
constexpr AirframesClientFrame_Source_SourceType AirframesClientFrame_Source::AERO;
constexpr AirframesClientFrame_Source_SourceType AirframesClientFrame_Source::SourceType_MIN;
constexpr AirframesClientFrame_Source_SourceType AirframesClientFrame_Source::SourceType_MAX;
constexpr int AirframesClientFrame_Source::SourceType_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
const ::PROTOBUF_NAMESPACE_ID::EnumDescriptor* AirframesClientFrame_Source_SourceFormat_descriptor() {
  ::PROTOBUF_NAMESPACE_ID::internal::AssignDescriptors(&descriptor_table_airframes_5fclient_5fframe_2eproto);
  return file_level_enum_descriptors_airframes_5fclient_5fframe_2eproto[4];
}
bool AirframesClientFrame_Source_SourceFormat_IsValid(int value) {
  switch (value) {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      return true;
    default:
      return false;
  }
}

#if (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)
constexpr AirframesClientFrame_Source_SourceFormat AirframesClientFrame_Source::HUMAN_READABLE_TEXT;
constexpr AirframesClientFrame_Source_SourceFormat AirframesClientFrame_Source::BEAST;
constexpr AirframesClientFrame_Source_SourceFormat AirframesClientFrame_Source::SBS3;
constexpr AirframesClientFrame_Source_SourceFormat AirframesClientFrame_Source::PLANE_PLOTTER;
constexpr AirframesClientFrame_Source_SourceFormat AirframesClientFrame_Source::JSON_GENERIC;
constexpr AirframesClientFrame_Source_SourceFormat AirframesClientFrame_Source::JSON_ACARSDEC;
constexpr AirframesClientFrame_Source_SourceFormat AirframesClientFrame_Source::JSON_VDLM2DEC;
constexpr AirframesClientFrame_Source_SourceFormat AirframesClientFrame_Source::SourceFormat_MIN;
constexpr AirframesClientFrame_Source_SourceFormat AirframesClientFrame_Source::SourceFormat_MAX;
constexpr int AirframesClientFrame_Source::SourceFormat_ARRAYSIZE;
#endif  // (__cplusplus < 201703) && (!defined(_MSC_VER) || _MSC_VER >= 1900)

// ===================================================================

void AcarsdecMessage::InitAsDefaultInstance() {
}
class AcarsdecMessage::_Internal {
 public:
};

AcarsdecMessage::AcarsdecMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:airframes.AcarsdecMessage)
}
AcarsdecMessage::AcarsdecMessage(const AcarsdecMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  station_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_station_id().empty()) {
    station_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_station_id(),
      GetArena());
  }
  mode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mode().empty()) {
    mode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mode(),
      GetArena());
  }
  label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_label().empty()) {
    label_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_label(),
      GetArena());
  }
  block_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_block_id().empty()) {
    block_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_block_id(),
      GetArena());
  }
  ack_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ack().empty()) {
    ack_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ack(),
      GetArena());
  }
  tail_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tail().empty()) {
    tail_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_tail(),
      GetArena());
  }
  flight_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_flight().empty()) {
    flight_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_flight(),
      GetArena());
  }
  message_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message_number().empty()) {
    message_number_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_message_number(),
      GetArena());
  }
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_text().empty()) {
    text_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_text(),
      GetArena());
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(end_));
  // @@protoc_insertion_point(copy_constructor:airframes.AcarsdecMessage)
}

void AcarsdecMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AcarsdecMessage_airframes_5fclient_5fframe_2eproto.base);
  station_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  block_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ack_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tail_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flight_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(end_));
}

AcarsdecMessage::~AcarsdecMessage() {
  // @@protoc_insertion_point(destructor:airframes.AcarsdecMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AcarsdecMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  station_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  block_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ack_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tail_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flight_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_number_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AcarsdecMessage::ArenaDtor(void* object) {
  AcarsdecMessage* _this = reinterpret_cast< AcarsdecMessage* >(object);
  (void)_this;
}
void AcarsdecMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AcarsdecMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AcarsdecMessage& AcarsdecMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AcarsdecMessage_airframes_5fclient_5fframe_2eproto.base);
  return *internal_default_instance();
}


void AcarsdecMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:airframes.AcarsdecMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  station_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mode_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  label_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  block_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ack_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tail_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  flight_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  message_number_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  text_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(end_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AcarsdecMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // string station_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_station_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.AcarsdecMessage.station_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 channel = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          channel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double frequency = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          frequency_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // sint32 level = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 error = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string mode = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 58)) {
          auto str = _internal_mutable_mode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.AcarsdecMessage.mode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string label = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          auto str = _internal_mutable_label();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.AcarsdecMessage.label"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string block_id = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_block_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.AcarsdecMessage.block_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ack = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_ack();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.AcarsdecMessage.ack"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string tail = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_tail();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.AcarsdecMessage.tail"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string flight = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_flight();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.AcarsdecMessage.flight"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message_number = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_message_number();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.AcarsdecMessage.message_number"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string text = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_text();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.AcarsdecMessage.text"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool end = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 120)) {
          end_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AcarsdecMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:airframes.AcarsdecMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (!(this->timestamp() <= 0 && this->timestamp() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_timestamp(), target);
  }

  // string station_id = 2;
  if (this->station_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_station_id().data(), static_cast<int>(this->_internal_station_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.AcarsdecMessage.station_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_station_id(), target);
  }

  // uint32 channel = 3;
  if (this->channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_channel(), target);
  }

  // double frequency = 4;
  if (!(this->frequency() <= 0 && this->frequency() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_frequency(), target);
  }

  // sint32 level = 5;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(5, this->_internal_level(), target);
  }

  // uint32 error = 6;
  if (this->error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_error(), target);
  }

  // string mode = 7;
  if (this->mode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mode().data(), static_cast<int>(this->_internal_mode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.AcarsdecMessage.mode");
    target = stream->WriteStringMaybeAliased(
        7, this->_internal_mode(), target);
  }

  // string label = 8;
  if (this->label().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_label().data(), static_cast<int>(this->_internal_label().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.AcarsdecMessage.label");
    target = stream->WriteStringMaybeAliased(
        8, this->_internal_label(), target);
  }

  // string block_id = 9;
  if (this->block_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_block_id().data(), static_cast<int>(this->_internal_block_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.AcarsdecMessage.block_id");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_block_id(), target);
  }

  // string ack = 10;
  if (this->ack().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ack().data(), static_cast<int>(this->_internal_ack().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.AcarsdecMessage.ack");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_ack(), target);
  }

  // string tail = 11;
  if (this->tail().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tail().data(), static_cast<int>(this->_internal_tail().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.AcarsdecMessage.tail");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_tail(), target);
  }

  // string flight = 12;
  if (this->flight().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_flight().data(), static_cast<int>(this->_internal_flight().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.AcarsdecMessage.flight");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_flight(), target);
  }

  // string message_number = 13;
  if (this->message_number().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message_number().data(), static_cast<int>(this->_internal_message_number().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.AcarsdecMessage.message_number");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_message_number(), target);
  }

  // string text = 14;
  if (this->text().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.AcarsdecMessage.text");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_text(), target);
  }

  // bool end = 15;
  if (this->end() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(15, this->_internal_end(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:airframes.AcarsdecMessage)
  return target;
}

size_t AcarsdecMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:airframes.AcarsdecMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string station_id = 2;
  if (this->station_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_station_id());
  }

  // string mode = 7;
  if (this->mode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mode());
  }

  // string label = 8;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_label());
  }

  // string block_id = 9;
  if (this->block_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_block_id());
  }

  // string ack = 10;
  if (this->ack().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ack());
  }

  // string tail = 11;
  if (this->tail().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tail());
  }

  // string flight = 12;
  if (this->flight().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_flight());
  }

  // string message_number = 13;
  if (this->message_number().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message_number());
  }

  // string text = 14;
  if (this->text().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  // double timestamp = 1;
  if (!(this->timestamp() <= 0 && this->timestamp() >= 0)) {
    total_size += 1 + 8;
  }

  // double frequency = 4;
  if (!(this->frequency() <= 0 && this->frequency() >= 0)) {
    total_size += 1 + 8;
  }

  // uint32 channel = 3;
  if (this->channel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_channel());
  }

  // sint32 level = 5;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_level());
  }

  // uint32 error = 6;
  if (this->error() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_error());
  }

  // bool end = 15;
  if (this->end() != 0) {
    total_size += 1 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AcarsdecMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:airframes.AcarsdecMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const AcarsdecMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AcarsdecMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:airframes.AcarsdecMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:airframes.AcarsdecMessage)
    MergeFrom(*source);
  }
}

void AcarsdecMessage::MergeFrom(const AcarsdecMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:airframes.AcarsdecMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.station_id().size() > 0) {
    _internal_set_station_id(from._internal_station_id());
  }
  if (from.mode().size() > 0) {
    _internal_set_mode(from._internal_mode());
  }
  if (from.label().size() > 0) {
    _internal_set_label(from._internal_label());
  }
  if (from.block_id().size() > 0) {
    _internal_set_block_id(from._internal_block_id());
  }
  if (from.ack().size() > 0) {
    _internal_set_ack(from._internal_ack());
  }
  if (from.tail().size() > 0) {
    _internal_set_tail(from._internal_tail());
  }
  if (from.flight().size() > 0) {
    _internal_set_flight(from._internal_flight());
  }
  if (from.message_number().size() > 0) {
    _internal_set_message_number(from._internal_message_number());
  }
  if (from.text().size() > 0) {
    _internal_set_text(from._internal_text());
  }
  if (!(from.timestamp() <= 0 && from.timestamp() >= 0)) {
    _internal_set_timestamp(from._internal_timestamp());
  }
  if (!(from.frequency() <= 0 && from.frequency() >= 0)) {
    _internal_set_frequency(from._internal_frequency());
  }
  if (from.channel() != 0) {
    _internal_set_channel(from._internal_channel());
  }
  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (from.error() != 0) {
    _internal_set_error(from._internal_error());
  }
  if (from.end() != 0) {
    _internal_set_end(from._internal_end());
  }
}

void AcarsdecMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:airframes.AcarsdecMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AcarsdecMessage::CopyFrom(const AcarsdecMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:airframes.AcarsdecMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AcarsdecMessage::IsInitialized() const {
  return true;
}

void AcarsdecMessage::InternalSwap(AcarsdecMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  station_id_.Swap(&other->station_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mode_.Swap(&other->mode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  label_.Swap(&other->label_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  block_id_.Swap(&other->block_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ack_.Swap(&other->ack_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tail_.Swap(&other->tail_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  flight_.Swap(&other->flight_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  message_number_.Swap(&other->message_number_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  text_.Swap(&other->text_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AcarsdecMessage, end_)
      + sizeof(AcarsdecMessage::end_)
      - PROTOBUF_FIELD_OFFSET(AcarsdecMessage, timestamp_)>(
          reinterpret_cast<char*>(&timestamp_),
          reinterpret_cast<char*>(&other->timestamp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AcarsdecMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void Vdlm2decMessage::InitAsDefaultInstance() {
}
class Vdlm2decMessage::_Internal {
 public:
};

Vdlm2decMessage::Vdlm2decMessage(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:airframes.Vdlm2decMessage)
}
Vdlm2decMessage::Vdlm2decMessage(const Vdlm2decMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  station_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_station_id().empty()) {
    station_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_station_id(),
      GetArena());
  }
  mode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_mode().empty()) {
    mode_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_mode(),
      GetArena());
  }
  label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_label().empty()) {
    label_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_label(),
      GetArena());
  }
  block_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_block_id().empty()) {
    block_id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_block_id(),
      GetArena());
  }
  ack_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ack().empty()) {
    ack_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ack(),
      GetArena());
  }
  tail_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_tail().empty()) {
    tail_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_tail(),
      GetArena());
  }
  flight_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_flight().empty()) {
    flight_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_flight(),
      GetArena());
  }
  message_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_message_number().empty()) {
    message_number_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_message_number(),
      GetArena());
  }
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_text().empty()) {
    text_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_text(),
      GetArena());
  }
  departure_airport_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_departure_airport().empty()) {
    departure_airport_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_departure_airport(),
      GetArena());
  }
  destination_airport_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_destination_airport().empty()) {
    destination_airport_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_destination_airport(),
      GetArena());
  }
  arrival_eta_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_arrival_eta().empty()) {
    arrival_eta_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_arrival_eta(),
      GetArena());
  }
  gate_out_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_gate_out().empty()) {
    gate_out_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_gate_out(),
      GetArena());
  }
  ground_off_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ground_off().empty()) {
    ground_off_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ground_off(),
      GetArena());
  }
  ground_on_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_ground_on().empty()) {
    ground_on_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_ground_on(),
      GetArena());
  }
  gate_in_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_gate_in().empty()) {
    gate_in_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_gate_in(),
      GetArena());
  }
  ::memcpy(&timestamp_, &from.timestamp_,
    static_cast<size_t>(reinterpret_cast<char*>(&end_) -
    reinterpret_cast<char*>(&timestamp_)) + sizeof(end_));
  // @@protoc_insertion_point(copy_constructor:airframes.Vdlm2decMessage)
}

void Vdlm2decMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_Vdlm2decMessage_airframes_5fclient_5fframe_2eproto.base);
  station_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mode_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  label_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  block_id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ack_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tail_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flight_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_number_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  text_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  departure_airport_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  destination_airport_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  arrival_eta_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  gate_out_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ground_off_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ground_on_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  gate_in_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(end_));
}

Vdlm2decMessage::~Vdlm2decMessage() {
  // @@protoc_insertion_point(destructor:airframes.Vdlm2decMessage)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void Vdlm2decMessage::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  station_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  mode_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  label_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  block_id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ack_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  tail_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  flight_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  message_number_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  text_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  departure_airport_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  destination_airport_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  arrival_eta_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  gate_out_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ground_off_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ground_on_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  gate_in_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void Vdlm2decMessage::ArenaDtor(void* object) {
  Vdlm2decMessage* _this = reinterpret_cast< Vdlm2decMessage* >(object);
  (void)_this;
}
void Vdlm2decMessage::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void Vdlm2decMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const Vdlm2decMessage& Vdlm2decMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_Vdlm2decMessage_airframes_5fclient_5fframe_2eproto.base);
  return *internal_default_instance();
}


void Vdlm2decMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:airframes.Vdlm2decMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  station_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mode_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  label_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  block_id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ack_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tail_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  flight_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  message_number_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  text_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  departure_airport_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  destination_airport_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  arrival_eta_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  gate_out_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ground_off_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ground_on_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  gate_in_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&timestamp_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&end_) -
      reinterpret_cast<char*>(&timestamp_)) + sizeof(end_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* Vdlm2decMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // double timestamp = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 9)) {
          timestamp_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // string station_id = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_station_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.Vdlm2decMessage.station_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 channel = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          channel_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // double frequency = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 33)) {
          frequency_ = ::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<double>(ptr);
          ptr += sizeof(double);
        } else goto handle_unusual;
        continue;
      // uint32 from_icao = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          from_icao_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 to_icao = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          to_icao_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // sint32 level = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarintZigZag32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // uint32 error = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64)) {
          error_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint32(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string mode = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          auto str = _internal_mutable_mode();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.Vdlm2decMessage.mode"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string label = 10;
      case 10:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 82)) {
          auto str = _internal_mutable_label();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.Vdlm2decMessage.label"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string block_id = 11;
      case 11:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 90)) {
          auto str = _internal_mutable_block_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.Vdlm2decMessage.block_id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ack = 12;
      case 12:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 98)) {
          auto str = _internal_mutable_ack();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.Vdlm2decMessage.ack"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string tail = 13;
      case 13:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 106)) {
          auto str = _internal_mutable_tail();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.Vdlm2decMessage.tail"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string flight = 14;
      case 14:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 114)) {
          auto str = _internal_mutable_flight();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.Vdlm2decMessage.flight"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string message_number = 15;
      case 15:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 122)) {
          auto str = _internal_mutable_message_number();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.Vdlm2decMessage.message_number"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string text = 16;
      case 16:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 130)) {
          auto str = _internal_mutable_text();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.Vdlm2decMessage.text"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // bool end = 17;
      case 17:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 136)) {
          end_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string departure_airport = 18;
      case 18:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 146)) {
          auto str = _internal_mutable_departure_airport();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.Vdlm2decMessage.departure_airport"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string destination_airport = 19;
      case 19:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 154)) {
          auto str = _internal_mutable_destination_airport();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.Vdlm2decMessage.destination_airport"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string arrival_eta = 20;
      case 20:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 162)) {
          auto str = _internal_mutable_arrival_eta();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.Vdlm2decMessage.arrival_eta"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string gate_out = 21;
      case 21:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 170)) {
          auto str = _internal_mutable_gate_out();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.Vdlm2decMessage.gate_out"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ground_off = 22;
      case 22:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 178)) {
          auto str = _internal_mutable_ground_off();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.Vdlm2decMessage.ground_off"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string ground_on = 23;
      case 23:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 186)) {
          auto str = _internal_mutable_ground_on();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.Vdlm2decMessage.ground_on"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string gate_in = 24;
      case 24:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 194)) {
          auto str = _internal_mutable_gate_in();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.Vdlm2decMessage.gate_in"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* Vdlm2decMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:airframes.Vdlm2decMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // double timestamp = 1;
  if (!(this->timestamp() <= 0 && this->timestamp() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(1, this->_internal_timestamp(), target);
  }

  // string station_id = 2;
  if (this->station_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_station_id().data(), static_cast<int>(this->_internal_station_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.Vdlm2decMessage.station_id");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_station_id(), target);
  }

  // uint32 channel = 3;
  if (this->channel() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(3, this->_internal_channel(), target);
  }

  // double frequency = 4;
  if (!(this->frequency() <= 0 && this->frequency() >= 0)) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteDoubleToArray(4, this->_internal_frequency(), target);
  }

  // uint32 from_icao = 5;
  if (this->from_icao() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(5, this->_internal_from_icao(), target);
  }

  // uint32 to_icao = 6;
  if (this->to_icao() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(6, this->_internal_to_icao(), target);
  }

  // sint32 level = 7;
  if (this->level() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteSInt32ToArray(7, this->_internal_level(), target);
  }

  // uint32 error = 8;
  if (this->error() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteUInt32ToArray(8, this->_internal_error(), target);
  }

  // string mode = 9;
  if (this->mode().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_mode().data(), static_cast<int>(this->_internal_mode().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.Vdlm2decMessage.mode");
    target = stream->WriteStringMaybeAliased(
        9, this->_internal_mode(), target);
  }

  // string label = 10;
  if (this->label().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_label().data(), static_cast<int>(this->_internal_label().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.Vdlm2decMessage.label");
    target = stream->WriteStringMaybeAliased(
        10, this->_internal_label(), target);
  }

  // string block_id = 11;
  if (this->block_id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_block_id().data(), static_cast<int>(this->_internal_block_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.Vdlm2decMessage.block_id");
    target = stream->WriteStringMaybeAliased(
        11, this->_internal_block_id(), target);
  }

  // string ack = 12;
  if (this->ack().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ack().data(), static_cast<int>(this->_internal_ack().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.Vdlm2decMessage.ack");
    target = stream->WriteStringMaybeAliased(
        12, this->_internal_ack(), target);
  }

  // string tail = 13;
  if (this->tail().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_tail().data(), static_cast<int>(this->_internal_tail().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.Vdlm2decMessage.tail");
    target = stream->WriteStringMaybeAliased(
        13, this->_internal_tail(), target);
  }

  // string flight = 14;
  if (this->flight().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_flight().data(), static_cast<int>(this->_internal_flight().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.Vdlm2decMessage.flight");
    target = stream->WriteStringMaybeAliased(
        14, this->_internal_flight(), target);
  }

  // string message_number = 15;
  if (this->message_number().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_message_number().data(), static_cast<int>(this->_internal_message_number().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.Vdlm2decMessage.message_number");
    target = stream->WriteStringMaybeAliased(
        15, this->_internal_message_number(), target);
  }

  // string text = 16;
  if (this->text().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_text().data(), static_cast<int>(this->_internal_text().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.Vdlm2decMessage.text");
    target = stream->WriteStringMaybeAliased(
        16, this->_internal_text(), target);
  }

  // bool end = 17;
  if (this->end() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteBoolToArray(17, this->_internal_end(), target);
  }

  // string departure_airport = 18;
  if (this->departure_airport().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_departure_airport().data(), static_cast<int>(this->_internal_departure_airport().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.Vdlm2decMessage.departure_airport");
    target = stream->WriteStringMaybeAliased(
        18, this->_internal_departure_airport(), target);
  }

  // string destination_airport = 19;
  if (this->destination_airport().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_destination_airport().data(), static_cast<int>(this->_internal_destination_airport().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.Vdlm2decMessage.destination_airport");
    target = stream->WriteStringMaybeAliased(
        19, this->_internal_destination_airport(), target);
  }

  // string arrival_eta = 20;
  if (this->arrival_eta().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_arrival_eta().data(), static_cast<int>(this->_internal_arrival_eta().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.Vdlm2decMessage.arrival_eta");
    target = stream->WriteStringMaybeAliased(
        20, this->_internal_arrival_eta(), target);
  }

  // string gate_out = 21;
  if (this->gate_out().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_gate_out().data(), static_cast<int>(this->_internal_gate_out().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.Vdlm2decMessage.gate_out");
    target = stream->WriteStringMaybeAliased(
        21, this->_internal_gate_out(), target);
  }

  // string ground_off = 22;
  if (this->ground_off().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ground_off().data(), static_cast<int>(this->_internal_ground_off().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.Vdlm2decMessage.ground_off");
    target = stream->WriteStringMaybeAliased(
        22, this->_internal_ground_off(), target);
  }

  // string ground_on = 23;
  if (this->ground_on().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_ground_on().data(), static_cast<int>(this->_internal_ground_on().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.Vdlm2decMessage.ground_on");
    target = stream->WriteStringMaybeAliased(
        23, this->_internal_ground_on(), target);
  }

  // string gate_in = 24;
  if (this->gate_in().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_gate_in().data(), static_cast<int>(this->_internal_gate_in().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.Vdlm2decMessage.gate_in");
    target = stream->WriteStringMaybeAliased(
        24, this->_internal_gate_in(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:airframes.Vdlm2decMessage)
  return target;
}

size_t Vdlm2decMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:airframes.Vdlm2decMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string station_id = 2;
  if (this->station_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_station_id());
  }

  // string mode = 9;
  if (this->mode().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_mode());
  }

  // string label = 10;
  if (this->label().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_label());
  }

  // string block_id = 11;
  if (this->block_id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_block_id());
  }

  // string ack = 12;
  if (this->ack().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ack());
  }

  // string tail = 13;
  if (this->tail().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_tail());
  }

  // string flight = 14;
  if (this->flight().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_flight());
  }

  // string message_number = 15;
  if (this->message_number().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_message_number());
  }

  // string text = 16;
  if (this->text().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_text());
  }

  // string departure_airport = 18;
  if (this->departure_airport().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_departure_airport());
  }

  // string destination_airport = 19;
  if (this->destination_airport().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_destination_airport());
  }

  // string arrival_eta = 20;
  if (this->arrival_eta().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_arrival_eta());
  }

  // string gate_out = 21;
  if (this->gate_out().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_gate_out());
  }

  // string ground_off = 22;
  if (this->ground_off().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ground_off());
  }

  // string ground_on = 23;
  if (this->ground_on().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_ground_on());
  }

  // string gate_in = 24;
  if (this->gate_in().size() > 0) {
    total_size += 2 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_gate_in());
  }

  // double timestamp = 1;
  if (!(this->timestamp() <= 0 && this->timestamp() >= 0)) {
    total_size += 1 + 8;
  }

  // double frequency = 4;
  if (!(this->frequency() <= 0 && this->frequency() >= 0)) {
    total_size += 1 + 8;
  }

  // uint32 channel = 3;
  if (this->channel() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_channel());
  }

  // uint32 from_icao = 5;
  if (this->from_icao() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_from_icao());
  }

  // uint32 to_icao = 6;
  if (this->to_icao() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_to_icao());
  }

  // sint32 level = 7;
  if (this->level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SInt32Size(
        this->_internal_level());
  }

  // uint32 error = 8;
  if (this->error() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::UInt32Size(
        this->_internal_error());
  }

  // bool end = 17;
  if (this->end() != 0) {
    total_size += 2 + 1;
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void Vdlm2decMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:airframes.Vdlm2decMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const Vdlm2decMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<Vdlm2decMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:airframes.Vdlm2decMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:airframes.Vdlm2decMessage)
    MergeFrom(*source);
  }
}

void Vdlm2decMessage::MergeFrom(const Vdlm2decMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:airframes.Vdlm2decMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.station_id().size() > 0) {
    _internal_set_station_id(from._internal_station_id());
  }
  if (from.mode().size() > 0) {
    _internal_set_mode(from._internal_mode());
  }
  if (from.label().size() > 0) {
    _internal_set_label(from._internal_label());
  }
  if (from.block_id().size() > 0) {
    _internal_set_block_id(from._internal_block_id());
  }
  if (from.ack().size() > 0) {
    _internal_set_ack(from._internal_ack());
  }
  if (from.tail().size() > 0) {
    _internal_set_tail(from._internal_tail());
  }
  if (from.flight().size() > 0) {
    _internal_set_flight(from._internal_flight());
  }
  if (from.message_number().size() > 0) {
    _internal_set_message_number(from._internal_message_number());
  }
  if (from.text().size() > 0) {
    _internal_set_text(from._internal_text());
  }
  if (from.departure_airport().size() > 0) {
    _internal_set_departure_airport(from._internal_departure_airport());
  }
  if (from.destination_airport().size() > 0) {
    _internal_set_destination_airport(from._internal_destination_airport());
  }
  if (from.arrival_eta().size() > 0) {
    _internal_set_arrival_eta(from._internal_arrival_eta());
  }
  if (from.gate_out().size() > 0) {
    _internal_set_gate_out(from._internal_gate_out());
  }
  if (from.ground_off().size() > 0) {
    _internal_set_ground_off(from._internal_ground_off());
  }
  if (from.ground_on().size() > 0) {
    _internal_set_ground_on(from._internal_ground_on());
  }
  if (from.gate_in().size() > 0) {
    _internal_set_gate_in(from._internal_gate_in());
  }
  if (!(from.timestamp() <= 0 && from.timestamp() >= 0)) {
    _internal_set_timestamp(from._internal_timestamp());
  }
  if (!(from.frequency() <= 0 && from.frequency() >= 0)) {
    _internal_set_frequency(from._internal_frequency());
  }
  if (from.channel() != 0) {
    _internal_set_channel(from._internal_channel());
  }
  if (from.from_icao() != 0) {
    _internal_set_from_icao(from._internal_from_icao());
  }
  if (from.to_icao() != 0) {
    _internal_set_to_icao(from._internal_to_icao());
  }
  if (from.level() != 0) {
    _internal_set_level(from._internal_level());
  }
  if (from.error() != 0) {
    _internal_set_error(from._internal_error());
  }
  if (from.end() != 0) {
    _internal_set_end(from._internal_end());
  }
}

void Vdlm2decMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:airframes.Vdlm2decMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Vdlm2decMessage::CopyFrom(const Vdlm2decMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:airframes.Vdlm2decMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Vdlm2decMessage::IsInitialized() const {
  return true;
}

void Vdlm2decMessage::InternalSwap(Vdlm2decMessage* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  station_id_.Swap(&other->station_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  mode_.Swap(&other->mode_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  label_.Swap(&other->label_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  block_id_.Swap(&other->block_id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ack_.Swap(&other->ack_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  tail_.Swap(&other->tail_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  flight_.Swap(&other->flight_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  message_number_.Swap(&other->message_number_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  text_.Swap(&other->text_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  departure_airport_.Swap(&other->departure_airport_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  destination_airport_.Swap(&other->destination_airport_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  arrival_eta_.Swap(&other->arrival_eta_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  gate_out_.Swap(&other->gate_out_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ground_off_.Swap(&other->ground_off_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ground_on_.Swap(&other->ground_on_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  gate_in_.Swap(&other->gate_in_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(Vdlm2decMessage, end_)
      + sizeof(Vdlm2decMessage::end_)
      - PROTOBUF_FIELD_OFFSET(Vdlm2decMessage, timestamp_)>(
          reinterpret_cast<char*>(&timestamp_),
          reinterpret_cast<char*>(&other->timestamp_));
}

::PROTOBUF_NAMESPACE_ID::Metadata Vdlm2decMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void TestRequest::InitAsDefaultInstance() {
}
class TestRequest::_Internal {
 public:
};

TestRequest::TestRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:airframes.TestRequest)
}
TestRequest::TestRequest(const TestRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:airframes.TestRequest)
}

void TestRequest::SharedCtor() {
}

TestRequest::~TestRequest() {
  // @@protoc_insertion_point(destructor:airframes.TestRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void TestRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void TestRequest::ArenaDtor(void* object) {
  TestRequest* _this = reinterpret_cast< TestRequest* >(object);
  (void)_this;
}
void TestRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void TestRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const TestRequest& TestRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_TestRequest_airframes_5fclient_5fframe_2eproto.base);
  return *internal_default_instance();
}


void TestRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:airframes.TestRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* TestRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* TestRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:airframes.TestRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:airframes.TestRequest)
  return target;
}

size_t TestRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:airframes.TestRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void TestRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:airframes.TestRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const TestRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<TestRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:airframes.TestRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:airframes.TestRequest)
    MergeFrom(*source);
  }
}

void TestRequest::MergeFrom(const TestRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:airframes.TestRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void TestRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:airframes.TestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void TestRequest::CopyFrom(const TestRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:airframes.TestRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool TestRequest::IsInitialized() const {
  return true;
}

void TestRequest::InternalSwap(TestRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata TestRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void FrameRequest::InitAsDefaultInstance() {
}
class FrameRequest::_Internal {
 public:
};

FrameRequest::FrameRequest(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:airframes.FrameRequest)
}
FrameRequest::FrameRequest(const FrameRequest& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:airframes.FrameRequest)
}

void FrameRequest::SharedCtor() {
}

FrameRequest::~FrameRequest() {
  // @@protoc_insertion_point(destructor:airframes.FrameRequest)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void FrameRequest::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
}

void FrameRequest::ArenaDtor(void* object) {
  FrameRequest* _this = reinterpret_cast< FrameRequest* >(object);
  (void)_this;
}
void FrameRequest::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void FrameRequest::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const FrameRequest& FrameRequest::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_FrameRequest_airframes_5fclient_5fframe_2eproto.base);
  return *internal_default_instance();
}


void FrameRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:airframes.FrameRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* FrameRequest::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* FrameRequest::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:airframes.FrameRequest)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:airframes.FrameRequest)
  return target;
}

size_t FrameRequest::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:airframes.FrameRequest)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void FrameRequest::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:airframes.FrameRequest)
  GOOGLE_DCHECK_NE(&from, this);
  const FrameRequest* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<FrameRequest>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:airframes.FrameRequest)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:airframes.FrameRequest)
    MergeFrom(*source);
  }
}

void FrameRequest::MergeFrom(const FrameRequest& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:airframes.FrameRequest)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

}

void FrameRequest::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:airframes.FrameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FrameRequest::CopyFrom(const FrameRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:airframes.FrameRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FrameRequest::IsInitialized() const {
  return true;
}

void FrameRequest::InternalSwap(FrameRequest* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
}

::PROTOBUF_NAMESPACE_ID::Metadata FrameRequest::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AirframesClientFrame_Source_App::InitAsDefaultInstance() {
}
class AirframesClientFrame_Source_App::_Internal {
 public:
};

AirframesClientFrame_Source_App::AirframesClientFrame_Source_App(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:airframes.AirframesClientFrame.Source.App)
}
AirframesClientFrame_Source_App::AirframesClientFrame_Source_App(const AirframesClientFrame_Source_App& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_version(),
      GetArena());
  }
  type_ = from.type_;
  // @@protoc_insertion_point(copy_constructor:airframes.AirframesClientFrame.Source.App)
}

void AirframesClientFrame_Source_App::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AirframesClientFrame_Source_App_airframes_5fclient_5fframe_2eproto.base);
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  type_ = 0;
}

AirframesClientFrame_Source_App::~AirframesClientFrame_Source_App() {
  // @@protoc_insertion_point(destructor:airframes.AirframesClientFrame.Source.App)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AirframesClientFrame_Source_App::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AirframesClientFrame_Source_App::ArenaDtor(void* object) {
  AirframesClientFrame_Source_App* _this = reinterpret_cast< AirframesClientFrame_Source_App* >(object);
  (void)_this;
}
void AirframesClientFrame_Source_App::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AirframesClientFrame_Source_App::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AirframesClientFrame_Source_App& AirframesClientFrame_Source_App::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AirframesClientFrame_Source_App_airframes_5fclient_5fframe_2eproto.base);
  return *internal_default_instance();
}


void AirframesClientFrame_Source_App::Clear() {
// @@protoc_insertion_point(message_clear_start:airframes.AirframesClientFrame.Source.App)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  type_ = 0;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AirframesClientFrame_Source_App::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .airframes.AirframesClientFrame.Source.App.AppType type = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::airframes::AirframesClientFrame_Source_App_AppType>(val));
        } else goto handle_unusual;
        continue;
      // string version = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.AirframesClientFrame.Source.App.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AirframesClientFrame_Source_App::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:airframes.AirframesClientFrame.Source.App)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .airframes.AirframesClientFrame.Source.App.AppType type = 1;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_type(), target);
  }

  // string version = 2;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.AirframesClientFrame.Source.App.version");
    target = stream->WriteStringMaybeAliased(
        2, this->_internal_version(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:airframes.AirframesClientFrame.Source.App)
  return target;
}

size_t AirframesClientFrame_Source_App::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:airframes.AirframesClientFrame.Source.App)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string version = 2;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // .airframes.AirframesClientFrame.Source.App.AppType type = 1;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AirframesClientFrame_Source_App::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:airframes.AirframesClientFrame.Source.App)
  GOOGLE_DCHECK_NE(&from, this);
  const AirframesClientFrame_Source_App* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AirframesClientFrame_Source_App>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:airframes.AirframesClientFrame.Source.App)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:airframes.AirframesClientFrame.Source.App)
    MergeFrom(*source);
  }
}

void AirframesClientFrame_Source_App::MergeFrom(const AirframesClientFrame_Source_App& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:airframes.AirframesClientFrame.Source.App)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
}

void AirframesClientFrame_Source_App::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:airframes.AirframesClientFrame.Source.App)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AirframesClientFrame_Source_App::CopyFrom(const AirframesClientFrame_Source_App& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:airframes.AirframesClientFrame.Source.App)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AirframesClientFrame_Source_App::IsInitialized() const {
  return true;
}

void AirframesClientFrame_Source_App::InternalSwap(AirframesClientFrame_Source_App* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  swap(type_, other->type_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AirframesClientFrame_Source_App::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AirframesClientFrame_Source_Host::InitAsDefaultInstance() {
}
class AirframesClientFrame_Source_Host::_Internal {
 public:
};

AirframesClientFrame_Source_Host::AirframesClientFrame_Source_Host(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:airframes.AirframesClientFrame.Source.Host)
}
AirframesClientFrame_Source_Host::AirframesClientFrame_Source_Host(const AirframesClientFrame_Source_Host& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_version().empty()) {
    version_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_version(),
      GetArena());
  }
  node_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_node_name().empty()) {
    node_name_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_node_name(),
      GetArena());
  }
  node_ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_node_ip().empty()) {
    node_ip_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_node_ip(),
      GetArena());
  }
  ::memcpy(&platform_, &from.platform_,
    static_cast<size_t>(reinterpret_cast<char*>(&os_) -
    reinterpret_cast<char*>(&platform_)) + sizeof(os_));
  // @@protoc_insertion_point(copy_constructor:airframes.AirframesClientFrame.Source.Host)
}

void AirframesClientFrame_Source_Host::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AirframesClientFrame_Source_Host_airframes_5fclient_5fframe_2eproto.base);
  version_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  node_name_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  node_ip_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  ::memset(&platform_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&os_) -
      reinterpret_cast<char*>(&platform_)) + sizeof(os_));
}

AirframesClientFrame_Source_Host::~AirframesClientFrame_Source_Host() {
  // @@protoc_insertion_point(destructor:airframes.AirframesClientFrame.Source.Host)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AirframesClientFrame_Source_Host::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  version_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  node_name_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  node_ip_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AirframesClientFrame_Source_Host::ArenaDtor(void* object) {
  AirframesClientFrame_Source_Host* _this = reinterpret_cast< AirframesClientFrame_Source_Host* >(object);
  (void)_this;
}
void AirframesClientFrame_Source_Host::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AirframesClientFrame_Source_Host::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AirframesClientFrame_Source_Host& AirframesClientFrame_Source_Host::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AirframesClientFrame_Source_Host_airframes_5fclient_5fframe_2eproto.base);
  return *internal_default_instance();
}


void AirframesClientFrame_Source_Host::Clear() {
// @@protoc_insertion_point(message_clear_start:airframes.AirframesClientFrame.Source.Host)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  version_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  node_name_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  node_ip_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::memset(&platform_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&os_) -
      reinterpret_cast<char*>(&platform_)) + sizeof(os_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AirframesClientFrame_Source_Host::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .airframes.AirframesClientFrame.Source.Host.Platform platform = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_platform(static_cast<::airframes::AirframesClientFrame_Source_Host_Platform>(val));
        } else goto handle_unusual;
        continue;
      // .airframes.AirframesClientFrame.Source.Host.OperatingSystem os = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 16)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_os(static_cast<::airframes::AirframesClientFrame_Source_Host_OperatingSystem>(val));
        } else goto handle_unusual;
        continue;
      // string version = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          auto str = _internal_mutable_version();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.AirframesClientFrame.Source.Host.version"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string node_name = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          auto str = _internal_mutable_node_name();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.AirframesClientFrame.Source.Host.node_name"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // string node_ip = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 42)) {
          auto str = _internal_mutable_node_ip();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.AirframesClientFrame.Source.Host.node_ip"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AirframesClientFrame_Source_Host::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:airframes.AirframesClientFrame.Source.Host)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .airframes.AirframesClientFrame.Source.Host.Platform platform = 1;
  if (this->platform() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      1, this->_internal_platform(), target);
  }

  // .airframes.AirframesClientFrame.Source.Host.OperatingSystem os = 2;
  if (this->os() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      2, this->_internal_os(), target);
  }

  // string version = 3;
  if (this->version().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_version().data(), static_cast<int>(this->_internal_version().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.AirframesClientFrame.Source.Host.version");
    target = stream->WriteStringMaybeAliased(
        3, this->_internal_version(), target);
  }

  // string node_name = 4;
  if (this->node_name().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_node_name().data(), static_cast<int>(this->_internal_node_name().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.AirframesClientFrame.Source.Host.node_name");
    target = stream->WriteStringMaybeAliased(
        4, this->_internal_node_name(), target);
  }

  // string node_ip = 5;
  if (this->node_ip().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_node_ip().data(), static_cast<int>(this->_internal_node_ip().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.AirframesClientFrame.Source.Host.node_ip");
    target = stream->WriteStringMaybeAliased(
        5, this->_internal_node_ip(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:airframes.AirframesClientFrame.Source.Host)
  return target;
}

size_t AirframesClientFrame_Source_Host::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:airframes.AirframesClientFrame.Source.Host)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string version = 3;
  if (this->version().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_version());
  }

  // string node_name = 4;
  if (this->node_name().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_node_name());
  }

  // string node_ip = 5;
  if (this->node_ip().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_node_ip());
  }

  // .airframes.AirframesClientFrame.Source.Host.Platform platform = 1;
  if (this->platform() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_platform());
  }

  // .airframes.AirframesClientFrame.Source.Host.OperatingSystem os = 2;
  if (this->os() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_os());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AirframesClientFrame_Source_Host::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:airframes.AirframesClientFrame.Source.Host)
  GOOGLE_DCHECK_NE(&from, this);
  const AirframesClientFrame_Source_Host* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AirframesClientFrame_Source_Host>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:airframes.AirframesClientFrame.Source.Host)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:airframes.AirframesClientFrame.Source.Host)
    MergeFrom(*source);
  }
}

void AirframesClientFrame_Source_Host::MergeFrom(const AirframesClientFrame_Source_Host& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:airframes.AirframesClientFrame.Source.Host)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.version().size() > 0) {
    _internal_set_version(from._internal_version());
  }
  if (from.node_name().size() > 0) {
    _internal_set_node_name(from._internal_node_name());
  }
  if (from.node_ip().size() > 0) {
    _internal_set_node_ip(from._internal_node_ip());
  }
  if (from.platform() != 0) {
    _internal_set_platform(from._internal_platform());
  }
  if (from.os() != 0) {
    _internal_set_os(from._internal_os());
  }
}

void AirframesClientFrame_Source_Host::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:airframes.AirframesClientFrame.Source.Host)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AirframesClientFrame_Source_Host::CopyFrom(const AirframesClientFrame_Source_Host& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:airframes.AirframesClientFrame.Source.Host)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AirframesClientFrame_Source_Host::IsInitialized() const {
  return true;
}

void AirframesClientFrame_Source_Host::InternalSwap(AirframesClientFrame_Source_Host* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  version_.Swap(&other->version_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  node_name_.Swap(&other->node_name_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  node_ip_.Swap(&other->node_ip_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AirframesClientFrame_Source_Host, os_)
      + sizeof(AirframesClientFrame_Source_Host::os_)
      - PROTOBUF_FIELD_OFFSET(AirframesClientFrame_Source_Host, platform_)>(
          reinterpret_cast<char*>(&platform_),
          reinterpret_cast<char*>(&other->platform_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AirframesClientFrame_Source_Host::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AirframesClientFrame_Source::InitAsDefaultInstance() {
  ::airframes::_AirframesClientFrame_Source_default_instance_._instance.get_mutable()->app_ = const_cast< ::airframes::AirframesClientFrame_Source_App*>(
      ::airframes::AirframesClientFrame_Source_App::internal_default_instance());
  ::airframes::_AirframesClientFrame_Source_default_instance_._instance.get_mutable()->host_ = const_cast< ::airframes::AirframesClientFrame_Source_Host*>(
      ::airframes::AirframesClientFrame_Source_Host::internal_default_instance());
}
class AirframesClientFrame_Source::_Internal {
 public:
  static const ::airframes::AirframesClientFrame_Source_App& app(const AirframesClientFrame_Source* msg);
  static const ::airframes::AirframesClientFrame_Source_Host& host(const AirframesClientFrame_Source* msg);
};

const ::airframes::AirframesClientFrame_Source_App&
AirframesClientFrame_Source::_Internal::app(const AirframesClientFrame_Source* msg) {
  return *msg->app_;
}
const ::airframes::AirframesClientFrame_Source_Host&
AirframesClientFrame_Source::_Internal::host(const AirframesClientFrame_Source* msg) {
  return *msg->host_;
}
AirframesClientFrame_Source::AirframesClientFrame_Source(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:airframes.AirframesClientFrame.Source)
}
AirframesClientFrame_Source::AirframesClientFrame_Source(const AirframesClientFrame_Source& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_app()) {
    app_ = new ::airframes::AirframesClientFrame_Source_App(*from.app_);
  } else {
    app_ = nullptr;
  }
  if (from._internal_has_host()) {
    host_ = new ::airframes::AirframesClientFrame_Source_Host(*from.host_);
  } else {
    host_ = nullptr;
  }
  ::memcpy(&type_, &from.type_,
    static_cast<size_t>(reinterpret_cast<char*>(&format_) -
    reinterpret_cast<char*>(&type_)) + sizeof(format_));
  // @@protoc_insertion_point(copy_constructor:airframes.AirframesClientFrame.Source)
}

void AirframesClientFrame_Source::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AirframesClientFrame_Source_airframes_5fclient_5fframe_2eproto.base);
  ::memset(&app_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&format_) -
      reinterpret_cast<char*>(&app_)) + sizeof(format_));
}

AirframesClientFrame_Source::~AirframesClientFrame_Source() {
  // @@protoc_insertion_point(destructor:airframes.AirframesClientFrame.Source)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AirframesClientFrame_Source::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete app_;
  if (this != internal_default_instance()) delete host_;
}

void AirframesClientFrame_Source::ArenaDtor(void* object) {
  AirframesClientFrame_Source* _this = reinterpret_cast< AirframesClientFrame_Source* >(object);
  (void)_this;
}
void AirframesClientFrame_Source::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AirframesClientFrame_Source::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AirframesClientFrame_Source& AirframesClientFrame_Source::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AirframesClientFrame_Source_airframes_5fclient_5fframe_2eproto.base);
  return *internal_default_instance();
}


void AirframesClientFrame_Source::Clear() {
// @@protoc_insertion_point(message_clear_start:airframes.AirframesClientFrame.Source)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && app_ != nullptr) {
    delete app_;
  }
  app_ = nullptr;
  if (GetArena() == nullptr && host_ != nullptr) {
    delete host_;
  }
  host_ = nullptr;
  ::memset(&type_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&format_) -
      reinterpret_cast<char*>(&type_)) + sizeof(format_));
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AirframesClientFrame_Source::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .airframes.AirframesClientFrame.Source.App app = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_app(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .airframes.AirframesClientFrame.Source.Host host = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_host(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .airframes.AirframesClientFrame.Source.SourceType type = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 24)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_type(static_cast<::airframes::AirframesClientFrame_Source_SourceType>(val));
        } else goto handle_unusual;
        continue;
      // .airframes.AirframesClientFrame.Source.SourceFormat format = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 32)) {
          ::PROTOBUF_NAMESPACE_ID::uint64 val = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint64(&ptr);
          CHK_(ptr);
          _internal_set_format(static_cast<::airframes::AirframesClientFrame_Source_SourceFormat>(val));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AirframesClientFrame_Source::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:airframes.AirframesClientFrame.Source)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .airframes.AirframesClientFrame.Source.App app = 1;
  if (this->has_app()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::app(this), target, stream);
  }

  // .airframes.AirframesClientFrame.Source.Host host = 2;
  if (this->has_host()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::host(this), target, stream);
  }

  // .airframes.AirframesClientFrame.Source.SourceType type = 3;
  if (this->type() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      3, this->_internal_type(), target);
  }

  // .airframes.AirframesClientFrame.Source.SourceFormat format = 4;
  if (this->format() != 0) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteEnumToArray(
      4, this->_internal_format(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:airframes.AirframesClientFrame.Source)
  return target;
}

size_t AirframesClientFrame_Source::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:airframes.AirframesClientFrame.Source)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .airframes.AirframesClientFrame.Source.App app = 1;
  if (this->has_app()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *app_);
  }

  // .airframes.AirframesClientFrame.Source.Host host = 2;
  if (this->has_host()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *host_);
  }

  // .airframes.AirframesClientFrame.Source.SourceType type = 3;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_type());
  }

  // .airframes.AirframesClientFrame.Source.SourceFormat format = 4;
  if (this->format() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::EnumSize(this->_internal_format());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AirframesClientFrame_Source::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:airframes.AirframesClientFrame.Source)
  GOOGLE_DCHECK_NE(&from, this);
  const AirframesClientFrame_Source* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AirframesClientFrame_Source>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:airframes.AirframesClientFrame.Source)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:airframes.AirframesClientFrame.Source)
    MergeFrom(*source);
  }
}

void AirframesClientFrame_Source::MergeFrom(const AirframesClientFrame_Source& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:airframes.AirframesClientFrame.Source)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_app()) {
    _internal_mutable_app()->::airframes::AirframesClientFrame_Source_App::MergeFrom(from._internal_app());
  }
  if (from.has_host()) {
    _internal_mutable_host()->::airframes::AirframesClientFrame_Source_Host::MergeFrom(from._internal_host());
  }
  if (from.type() != 0) {
    _internal_set_type(from._internal_type());
  }
  if (from.format() != 0) {
    _internal_set_format(from._internal_format());
  }
}

void AirframesClientFrame_Source::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:airframes.AirframesClientFrame.Source)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AirframesClientFrame_Source::CopyFrom(const AirframesClientFrame_Source& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:airframes.AirframesClientFrame.Source)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AirframesClientFrame_Source::IsInitialized() const {
  return true;
}

void AirframesClientFrame_Source::InternalSwap(AirframesClientFrame_Source* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AirframesClientFrame_Source, format_)
      + sizeof(AirframesClientFrame_Source::format_)
      - PROTOBUF_FIELD_OFFSET(AirframesClientFrame_Source, app_)>(
          reinterpret_cast<char*>(&app_),
          reinterpret_cast<char*>(&other->app_));
}

::PROTOBUF_NAMESPACE_ID::Metadata AirframesClientFrame_Source::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AirframesClientFrame_AirframesConfig_Feed::InitAsDefaultInstance() {
}
class AirframesClientFrame_AirframesConfig_Feed::_Internal {
 public:
};

AirframesClientFrame_AirframesConfig_Feed::AirframesClientFrame_AirframesConfig_Feed(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:airframes.AirframesClientFrame.AirframesConfig.Feed)
}
AirframesClientFrame_AirframesConfig_Feed::AirframesClientFrame_AirframesConfig_Feed(const AirframesClientFrame_AirframesConfig_Feed& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
  if (!from._internal_id().empty()) {
    id_.Set(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), from._internal_id(),
      GetArena());
  }
  // @@protoc_insertion_point(copy_constructor:airframes.AirframesClientFrame.AirframesConfig.Feed)
}

void AirframesClientFrame_AirframesConfig_Feed::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AirframesClientFrame_AirframesConfig_Feed_airframes_5fclient_5fframe_2eproto.base);
  id_.UnsafeSetDefault(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

AirframesClientFrame_AirframesConfig_Feed::~AirframesClientFrame_AirframesConfig_Feed() {
  // @@protoc_insertion_point(destructor:airframes.AirframesClientFrame.AirframesConfig.Feed)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AirframesClientFrame_AirframesConfig_Feed::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  id_.DestroyNoArena(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited());
}

void AirframesClientFrame_AirframesConfig_Feed::ArenaDtor(void* object) {
  AirframesClientFrame_AirframesConfig_Feed* _this = reinterpret_cast< AirframesClientFrame_AirframesConfig_Feed* >(object);
  (void)_this;
}
void AirframesClientFrame_AirframesConfig_Feed::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AirframesClientFrame_AirframesConfig_Feed::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AirframesClientFrame_AirframesConfig_Feed& AirframesClientFrame_AirframesConfig_Feed::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AirframesClientFrame_AirframesConfig_Feed_airframes_5fclient_5fframe_2eproto.base);
  return *internal_default_instance();
}


void AirframesClientFrame_AirframesConfig_Feed::Clear() {
// @@protoc_insertion_point(message_clear_start:airframes.AirframesClientFrame.AirframesConfig.Feed)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  id_.ClearToEmpty(&::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AirframesClientFrame_AirframesConfig_Feed::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // string id = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          auto str = _internal_mutable_id();
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
          CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "airframes.AirframesClientFrame.AirframesConfig.Feed.id"));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AirframesClientFrame_AirframesConfig_Feed::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:airframes.AirframesClientFrame.AirframesConfig.Feed)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      this->_internal_id().data(), static_cast<int>(this->_internal_id().length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "airframes.AirframesClientFrame.AirframesConfig.Feed.id");
    target = stream->WriteStringMaybeAliased(
        1, this->_internal_id(), target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:airframes.AirframesClientFrame.AirframesConfig.Feed)
  return target;
}

size_t AirframesClientFrame_AirframesConfig_Feed::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:airframes.AirframesClientFrame.AirframesConfig.Feed)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // string id = 1;
  if (this->id().size() > 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
        this->_internal_id());
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AirframesClientFrame_AirframesConfig_Feed::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:airframes.AirframesClientFrame.AirframesConfig.Feed)
  GOOGLE_DCHECK_NE(&from, this);
  const AirframesClientFrame_AirframesConfig_Feed* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AirframesClientFrame_AirframesConfig_Feed>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:airframes.AirframesClientFrame.AirframesConfig.Feed)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:airframes.AirframesClientFrame.AirframesConfig.Feed)
    MergeFrom(*source);
  }
}

void AirframesClientFrame_AirframesConfig_Feed::MergeFrom(const AirframesClientFrame_AirframesConfig_Feed& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:airframes.AirframesClientFrame.AirframesConfig.Feed)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id().size() > 0) {
    _internal_set_id(from._internal_id());
  }
}

void AirframesClientFrame_AirframesConfig_Feed::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:airframes.AirframesClientFrame.AirframesConfig.Feed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AirframesClientFrame_AirframesConfig_Feed::CopyFrom(const AirframesClientFrame_AirframesConfig_Feed& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:airframes.AirframesClientFrame.AirframesConfig.Feed)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AirframesClientFrame_AirframesConfig_Feed::IsInitialized() const {
  return true;
}

void AirframesClientFrame_AirframesConfig_Feed::InternalSwap(AirframesClientFrame_AirframesConfig_Feed* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  id_.Swap(&other->id_, &::PROTOBUF_NAMESPACE_ID::internal::GetEmptyStringAlreadyInited(), GetArena());
}

::PROTOBUF_NAMESPACE_ID::Metadata AirframesClientFrame_AirframesConfig_Feed::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AirframesClientFrame_AirframesConfig::InitAsDefaultInstance() {
  ::airframes::_AirframesClientFrame_AirframesConfig_default_instance_._instance.get_mutable()->feed_ = const_cast< ::airframes::AirframesClientFrame_AirframesConfig_Feed*>(
      ::airframes::AirframesClientFrame_AirframesConfig_Feed::internal_default_instance());
}
class AirframesClientFrame_AirframesConfig::_Internal {
 public:
  static const ::airframes::AirframesClientFrame_AirframesConfig_Feed& feed(const AirframesClientFrame_AirframesConfig* msg);
};

const ::airframes::AirframesClientFrame_AirframesConfig_Feed&
AirframesClientFrame_AirframesConfig::_Internal::feed(const AirframesClientFrame_AirframesConfig* msg) {
  return *msg->feed_;
}
AirframesClientFrame_AirframesConfig::AirframesClientFrame_AirframesConfig(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:airframes.AirframesClientFrame.AirframesConfig)
}
AirframesClientFrame_AirframesConfig::AirframesClientFrame_AirframesConfig(const AirframesClientFrame_AirframesConfig& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_feed()) {
    feed_ = new ::airframes::AirframesClientFrame_AirframesConfig_Feed(*from.feed_);
  } else {
    feed_ = nullptr;
  }
  // @@protoc_insertion_point(copy_constructor:airframes.AirframesClientFrame.AirframesConfig)
}

void AirframesClientFrame_AirframesConfig::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AirframesClientFrame_AirframesConfig_airframes_5fclient_5fframe_2eproto.base);
  feed_ = nullptr;
}

AirframesClientFrame_AirframesConfig::~AirframesClientFrame_AirframesConfig() {
  // @@protoc_insertion_point(destructor:airframes.AirframesClientFrame.AirframesConfig)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AirframesClientFrame_AirframesConfig::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete feed_;
}

void AirframesClientFrame_AirframesConfig::ArenaDtor(void* object) {
  AirframesClientFrame_AirframesConfig* _this = reinterpret_cast< AirframesClientFrame_AirframesConfig* >(object);
  (void)_this;
}
void AirframesClientFrame_AirframesConfig::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AirframesClientFrame_AirframesConfig::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AirframesClientFrame_AirframesConfig& AirframesClientFrame_AirframesConfig::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AirframesClientFrame_AirframesConfig_airframes_5fclient_5fframe_2eproto.base);
  return *internal_default_instance();
}


void AirframesClientFrame_AirframesConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:airframes.AirframesClientFrame.AirframesConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && feed_ != nullptr) {
    delete feed_;
  }
  feed_ = nullptr;
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AirframesClientFrame_AirframesConfig::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .airframes.AirframesClientFrame.AirframesConfig.Feed feed = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_feed(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AirframesClientFrame_AirframesConfig::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:airframes.AirframesClientFrame.AirframesConfig)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .airframes.AirframesClientFrame.AirframesConfig.Feed feed = 1;
  if (this->has_feed()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::feed(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:airframes.AirframesClientFrame.AirframesConfig)
  return target;
}

size_t AirframesClientFrame_AirframesConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:airframes.AirframesClientFrame.AirframesConfig)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .airframes.AirframesClientFrame.AirframesConfig.Feed feed = 1;
  if (this->has_feed()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *feed_);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AirframesClientFrame_AirframesConfig::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:airframes.AirframesClientFrame.AirframesConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const AirframesClientFrame_AirframesConfig* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AirframesClientFrame_AirframesConfig>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:airframes.AirframesClientFrame.AirframesConfig)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:airframes.AirframesClientFrame.AirframesConfig)
    MergeFrom(*source);
  }
}

void AirframesClientFrame_AirframesConfig::MergeFrom(const AirframesClientFrame_AirframesConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:airframes.AirframesClientFrame.AirframesConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_feed()) {
    _internal_mutable_feed()->::airframes::AirframesClientFrame_AirframesConfig_Feed::MergeFrom(from._internal_feed());
  }
}

void AirframesClientFrame_AirframesConfig::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:airframes.AirframesClientFrame.AirframesConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AirframesClientFrame_AirframesConfig::CopyFrom(const AirframesClientFrame_AirframesConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:airframes.AirframesClientFrame.AirframesConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AirframesClientFrame_AirframesConfig::IsInitialized() const {
  return true;
}

void AirframesClientFrame_AirframesConfig::InternalSwap(AirframesClientFrame_AirframesConfig* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  swap(feed_, other->feed_);
}

::PROTOBUF_NAMESPACE_ID::Metadata AirframesClientFrame_AirframesConfig::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void AirframesClientFrame::InitAsDefaultInstance() {
  ::airframes::_AirframesClientFrame_default_instance_._instance.get_mutable()->source_ = const_cast< ::airframes::AirframesClientFrame_Source*>(
      ::airframes::AirframesClientFrame_Source::internal_default_instance());
  ::airframes::_AirframesClientFrame_default_instance_._instance.get_mutable()->airframes_ = const_cast< ::airframes::AirframesClientFrame_AirframesConfig*>(
      ::airframes::AirframesClientFrame_AirframesConfig::internal_default_instance());
  ::airframes::_AirframesClientFrame_default_instance_.acarsdec_message_ = const_cast< ::airframes::AcarsdecMessage*>(
      ::airframes::AcarsdecMessage::internal_default_instance());
  ::airframes::_AirframesClientFrame_default_instance_.vdlm2dec_message_ = const_cast< ::airframes::Vdlm2decMessage*>(
      ::airframes::Vdlm2decMessage::internal_default_instance());
}
class AirframesClientFrame::_Internal {
 public:
  static const ::airframes::AirframesClientFrame_Source& source(const AirframesClientFrame* msg);
  static const ::airframes::AirframesClientFrame_AirframesConfig& airframes(const AirframesClientFrame* msg);
  static const ::airframes::AcarsdecMessage& acarsdec_message(const AirframesClientFrame* msg);
  static const ::airframes::Vdlm2decMessage& vdlm2dec_message(const AirframesClientFrame* msg);
};

const ::airframes::AirframesClientFrame_Source&
AirframesClientFrame::_Internal::source(const AirframesClientFrame* msg) {
  return *msg->source_;
}
const ::airframes::AirframesClientFrame_AirframesConfig&
AirframesClientFrame::_Internal::airframes(const AirframesClientFrame* msg) {
  return *msg->airframes_;
}
const ::airframes::AcarsdecMessage&
AirframesClientFrame::_Internal::acarsdec_message(const AirframesClientFrame* msg) {
  return *msg->message_.acarsdec_message_;
}
const ::airframes::Vdlm2decMessage&
AirframesClientFrame::_Internal::vdlm2dec_message(const AirframesClientFrame* msg) {
  return *msg->message_.vdlm2dec_message_;
}
void AirframesClientFrame::set_allocated_acarsdec_message(::airframes::AcarsdecMessage* acarsdec_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_message();
  if (acarsdec_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(acarsdec_message);
    if (message_arena != submessage_arena) {
      acarsdec_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, acarsdec_message, submessage_arena);
    }
    set_has_acarsdec_message();
    message_.acarsdec_message_ = acarsdec_message;
  }
  // @@protoc_insertion_point(field_set_allocated:airframes.AirframesClientFrame.acarsdec_message)
}
void AirframesClientFrame::set_allocated_vdlm2dec_message(::airframes::Vdlm2decMessage* vdlm2dec_message) {
  ::PROTOBUF_NAMESPACE_ID::Arena* message_arena = GetArena();
  clear_message();
  if (vdlm2dec_message) {
    ::PROTOBUF_NAMESPACE_ID::Arena* submessage_arena =
      ::PROTOBUF_NAMESPACE_ID::Arena::GetArena(vdlm2dec_message);
    if (message_arena != submessage_arena) {
      vdlm2dec_message = ::PROTOBUF_NAMESPACE_ID::internal::GetOwnedMessage(
          message_arena, vdlm2dec_message, submessage_arena);
    }
    set_has_vdlm2dec_message();
    message_.vdlm2dec_message_ = vdlm2dec_message;
  }
  // @@protoc_insertion_point(field_set_allocated:airframes.AirframesClientFrame.vdlm2dec_message)
}
AirframesClientFrame::AirframesClientFrame(::PROTOBUF_NAMESPACE_ID::Arena* arena)
  : ::PROTOBUF_NAMESPACE_ID::Message(arena) {
  SharedCtor();
  RegisterArenaDtor(arena);
  // @@protoc_insertion_point(arena_constructor:airframes.AirframesClientFrame)
}
AirframesClientFrame::AirframesClientFrame(const AirframesClientFrame& from)
  : ::PROTOBUF_NAMESPACE_ID::Message() {
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  if (from._internal_has_source()) {
    source_ = new ::airframes::AirframesClientFrame_Source(*from.source_);
  } else {
    source_ = nullptr;
  }
  if (from._internal_has_airframes()) {
    airframes_ = new ::airframes::AirframesClientFrame_AirframesConfig(*from.airframes_);
  } else {
    airframes_ = nullptr;
  }
  clear_has_message();
  switch (from.message_case()) {
    case kAcarsdecMessage: {
      _internal_mutable_acarsdec_message()->::airframes::AcarsdecMessage::MergeFrom(from._internal_acarsdec_message());
      break;
    }
    case kVdlm2DecMessage: {
      _internal_mutable_vdlm2dec_message()->::airframes::Vdlm2decMessage::MergeFrom(from._internal_vdlm2dec_message());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  // @@protoc_insertion_point(copy_constructor:airframes.AirframesClientFrame)
}

void AirframesClientFrame::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_AirframesClientFrame_airframes_5fclient_5fframe_2eproto.base);
  ::memset(&source_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&airframes_) -
      reinterpret_cast<char*>(&source_)) + sizeof(airframes_));
  clear_has_message();
}

AirframesClientFrame::~AirframesClientFrame() {
  // @@protoc_insertion_point(destructor:airframes.AirframesClientFrame)
  SharedDtor();
  _internal_metadata_.Delete<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

void AirframesClientFrame::SharedDtor() {
  GOOGLE_DCHECK(GetArena() == nullptr);
  if (this != internal_default_instance()) delete source_;
  if (this != internal_default_instance()) delete airframes_;
  if (has_message()) {
    clear_message();
  }
}

void AirframesClientFrame::ArenaDtor(void* object) {
  AirframesClientFrame* _this = reinterpret_cast< AirframesClientFrame* >(object);
  (void)_this;
}
void AirframesClientFrame::RegisterArenaDtor(::PROTOBUF_NAMESPACE_ID::Arena*) {
}
void AirframesClientFrame::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const AirframesClientFrame& AirframesClientFrame::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_AirframesClientFrame_airframes_5fclient_5fframe_2eproto.base);
  return *internal_default_instance();
}


void AirframesClientFrame::clear_message() {
// @@protoc_insertion_point(one_of_clear_start:airframes.AirframesClientFrame)
  switch (message_case()) {
    case kAcarsdecMessage: {
      if (GetArena() == nullptr) {
        delete message_.acarsdec_message_;
      }
      break;
    }
    case kVdlm2DecMessage: {
      if (GetArena() == nullptr) {
        delete message_.vdlm2dec_message_;
      }
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  _oneof_case_[0] = MESSAGE_NOT_SET;
}


void AirframesClientFrame::Clear() {
// @@protoc_insertion_point(message_clear_start:airframes.AirframesClientFrame)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  if (GetArena() == nullptr && source_ != nullptr) {
    delete source_;
  }
  source_ = nullptr;
  if (GetArena() == nullptr && airframes_ != nullptr) {
    delete airframes_;
  }
  airframes_ = nullptr;
  clear_message();
  _internal_metadata_.Clear<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>();
}

const char* AirframesClientFrame::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  ::PROTOBUF_NAMESPACE_ID::Arena* arena = GetArena(); (void)arena;
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // .airframes.AirframesClientFrame.Source source = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ctx->ParseMessage(_internal_mutable_source(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .airframes.AirframesClientFrame.AirframesConfig airframes = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr = ctx->ParseMessage(_internal_mutable_airframes(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .airframes.AcarsdecMessage acarsdec_message = 3;
      case 3:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 26)) {
          ptr = ctx->ParseMessage(_internal_mutable_acarsdec_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // .airframes.Vdlm2decMessage vdlm2dec_message = 4;
      case 4:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 34)) {
          ptr = ctx->ParseMessage(_internal_mutable_vdlm2dec_message(), ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag,
            _internal_metadata_.mutable_unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(),
            ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* AirframesClientFrame::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:airframes.AirframesClientFrame)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // .airframes.AirframesClientFrame.Source source = 1;
  if (this->has_source()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        1, _Internal::source(this), target, stream);
  }

  // .airframes.AirframesClientFrame.AirframesConfig airframes = 2;
  if (this->has_airframes()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        2, _Internal::airframes(this), target, stream);
  }

  // .airframes.AcarsdecMessage acarsdec_message = 3;
  if (_internal_has_acarsdec_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        3, _Internal::acarsdec_message(this), target, stream);
  }

  // .airframes.Vdlm2decMessage vdlm2dec_message = 4;
  if (_internal_has_vdlm2dec_message()) {
    target = stream->EnsureSpace(target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessage(
        4, _Internal::vdlm2dec_message(this), target, stream);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(::PROTOBUF_NAMESPACE_ID::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:airframes.AirframesClientFrame)
  return target;
}

size_t AirframesClientFrame::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:airframes.AirframesClientFrame)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // .airframes.AirframesClientFrame.Source source = 1;
  if (this->has_source()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *source_);
  }

  // .airframes.AirframesClientFrame.AirframesConfig airframes = 2;
  if (this->has_airframes()) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
        *airframes_);
  }

  switch (message_case()) {
    // .airframes.AcarsdecMessage acarsdec_message = 3;
    case kAcarsdecMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.acarsdec_message_);
      break;
    }
    // .airframes.Vdlm2decMessage vdlm2dec_message = 4;
    case kVdlm2DecMessage: {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          *message_.vdlm2dec_message_);
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void AirframesClientFrame::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:airframes.AirframesClientFrame)
  GOOGLE_DCHECK_NE(&from, this);
  const AirframesClientFrame* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<AirframesClientFrame>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:airframes.AirframesClientFrame)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:airframes.AirframesClientFrame)
    MergeFrom(*source);
  }
}

void AirframesClientFrame::MergeFrom(const AirframesClientFrame& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:airframes.AirframesClientFrame)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.has_source()) {
    _internal_mutable_source()->::airframes::AirframesClientFrame_Source::MergeFrom(from._internal_source());
  }
  if (from.has_airframes()) {
    _internal_mutable_airframes()->::airframes::AirframesClientFrame_AirframesConfig::MergeFrom(from._internal_airframes());
  }
  switch (from.message_case()) {
    case kAcarsdecMessage: {
      _internal_mutable_acarsdec_message()->::airframes::AcarsdecMessage::MergeFrom(from._internal_acarsdec_message());
      break;
    }
    case kVdlm2DecMessage: {
      _internal_mutable_vdlm2dec_message()->::airframes::Vdlm2decMessage::MergeFrom(from._internal_vdlm2dec_message());
      break;
    }
    case MESSAGE_NOT_SET: {
      break;
    }
  }
}

void AirframesClientFrame::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:airframes.AirframesClientFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AirframesClientFrame::CopyFrom(const AirframesClientFrame& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:airframes.AirframesClientFrame)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AirframesClientFrame::IsInitialized() const {
  return true;
}

void AirframesClientFrame::InternalSwap(AirframesClientFrame* other) {
  using std::swap;
  _internal_metadata_.Swap<::PROTOBUF_NAMESPACE_ID::UnknownFieldSet>(&other->_internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::internal::memswap<
      PROTOBUF_FIELD_OFFSET(AirframesClientFrame, airframes_)
      + sizeof(AirframesClientFrame::airframes_)
      - PROTOBUF_FIELD_OFFSET(AirframesClientFrame, source_)>(
          reinterpret_cast<char*>(&source_),
          reinterpret_cast<char*>(&other->source_));
  swap(message_, other->message_);
  swap(_oneof_case_[0], other->_oneof_case_[0]);
}

::PROTOBUF_NAMESPACE_ID::Metadata AirframesClientFrame::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace airframes
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::airframes::AcarsdecMessage* Arena::CreateMaybeMessage< ::airframes::AcarsdecMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::airframes::AcarsdecMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::airframes::Vdlm2decMessage* Arena::CreateMaybeMessage< ::airframes::Vdlm2decMessage >(Arena* arena) {
  return Arena::CreateMessageInternal< ::airframes::Vdlm2decMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::airframes::TestRequest* Arena::CreateMaybeMessage< ::airframes::TestRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::airframes::TestRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::airframes::FrameRequest* Arena::CreateMaybeMessage< ::airframes::FrameRequest >(Arena* arena) {
  return Arena::CreateMessageInternal< ::airframes::FrameRequest >(arena);
}
template<> PROTOBUF_NOINLINE ::airframes::AirframesClientFrame_Source_App* Arena::CreateMaybeMessage< ::airframes::AirframesClientFrame_Source_App >(Arena* arena) {
  return Arena::CreateMessageInternal< ::airframes::AirframesClientFrame_Source_App >(arena);
}
template<> PROTOBUF_NOINLINE ::airframes::AirframesClientFrame_Source_Host* Arena::CreateMaybeMessage< ::airframes::AirframesClientFrame_Source_Host >(Arena* arena) {
  return Arena::CreateMessageInternal< ::airframes::AirframesClientFrame_Source_Host >(arena);
}
template<> PROTOBUF_NOINLINE ::airframes::AirframesClientFrame_Source* Arena::CreateMaybeMessage< ::airframes::AirframesClientFrame_Source >(Arena* arena) {
  return Arena::CreateMessageInternal< ::airframes::AirframesClientFrame_Source >(arena);
}
template<> PROTOBUF_NOINLINE ::airframes::AirframesClientFrame_AirframesConfig_Feed* Arena::CreateMaybeMessage< ::airframes::AirframesClientFrame_AirframesConfig_Feed >(Arena* arena) {
  return Arena::CreateMessageInternal< ::airframes::AirframesClientFrame_AirframesConfig_Feed >(arena);
}
template<> PROTOBUF_NOINLINE ::airframes::AirframesClientFrame_AirframesConfig* Arena::CreateMaybeMessage< ::airframes::AirframesClientFrame_AirframesConfig >(Arena* arena) {
  return Arena::CreateMessageInternal< ::airframes::AirframesClientFrame_AirframesConfig >(arena);
}
template<> PROTOBUF_NOINLINE ::airframes::AirframesClientFrame* Arena::CreateMaybeMessage< ::airframes::AirframesClientFrame >(Arena* arena) {
  return Arena::CreateMessageInternal< ::airframes::AirframesClientFrame >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
